<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Ceph storage monitoring with Zabbix</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1GfBUM2HVz0/" /><category term="DevOps" /><category term="Linux" /><category term="Performance" /><category term="ceph" /><category term="continuous monitoring" /><category term="storage" /><category term="template" /><category term="zabbix" /><author><name>Alessandro Silva</name></author><id>https://developers.redhat.com/blog/?p=684817</id><updated>2020-03-23T07:00:22Z</updated><published>2020-03-23T07:00:22Z</published><content type="html">&lt;p&gt;Storage prices are decreasing, while business demands are growing, and companies are storing more data than ever before. Following this growth pattern, demand grows for monitoring and data protection involving software-defined storage. Downtimes have a high cost that can directly impact business continuity and cause irreversible damage to organizations. Aftereffects include loss of assets and information; interruption of services and operations; law, regulation, or contract violations; along with the financial impacts from losing customers and damaging a company&amp;#8217;s reputation.&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;em&gt;&lt;a href="https://blogs.gartner.com/andrew-lerner/2014/07/16/the-cost-of-downtime/"&gt;Gartner&lt;/a&gt; estimates that a minute of downtime costs enterprise organizations $5,600, and an hour costs over $300,000.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;On the other hand, in a DevOps context, it&amp;#8217;s essential to think about &lt;em&gt;continuous monitoring&lt;/em&gt;, which is a proactive approach to monitoring throughout the full application&amp;#8217;s life cycle and that of its components. This approach helps identify the root cause of possible problems and then quickly and proactively prevent performance issues or future outages. In this article, you will learn how to implement &lt;a href="https://ceph.io/ceph-storage/" target="_blank" rel="noopener noreferrer"&gt;Ceph&lt;/a&gt; storage monitoring using the enterprise open source tool Zabbix.&lt;/p&gt; &lt;p&gt;&lt;span id="more-684817"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;What is Ceph storage?&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Ceph storage is an open source &lt;em&gt;software-defined storage&lt;/em&gt; system with petabyte-scale and distributed storage, designed mainly for cloud workloads. While traditional NAS or SAN storage solutions are often based on expensive proprietary hardware solutions, software-defined storage is usually designed to run on commodity hardware, which makes these systems less expensive than traditional storage appliances.&lt;/p&gt; &lt;p&gt;Ceph storage is designed primarily for the following use cases:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Image and virtual block device storage for an OpenStack environment (using Glance, Cinder, and Nova).&lt;/li&gt; &lt;li&gt;Object-based storage access for applications that use standard APIs.&lt;/li&gt; &lt;li&gt;Persistent storage for containers.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;According to the Ceph documentation, whether you want to provide object storage or block device services to cloud platforms, deploy a filesystem, or use Ceph for another purpose, all storage cluster deployments begin with setting up a node, your network, and the storage cluster. A Ceph storage cluster requires at least one monitor (&lt;code&gt;ceph-mon&lt;/code&gt;), one manager (&lt;code&gt;ceph-mgr&lt;/code&gt;), and an object storage daemon (&lt;code&gt;ceph-osd&lt;/code&gt;). The metadata server (&lt;code&gt;ceph-mds&lt;/code&gt;) is also required when running Ceph File System (CephFS) clients. These are some of the many components that will be monitored by Zabbix. To learn more about what each component does, read the &lt;a href="https://docs.ceph.com/docs/master/start/intro/" target="_blank" rel="noopener noreferrer"&gt;product documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Here we are proposing a lab, but if you are planning to do this in production, you should review hardware and the operating system recommendations first.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;What is Zabbix and how can it help?&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Zabbix is an enterprise-class open source distributed monitoring system. It monitors numerous network parameters and the health and integrity of servers. Zabbix uses a flexible notification mechanism that lets users configure email-based alerts for virtually any event, which provides a fast reaction to server problems. This tool also offers excellent reporting and data visualization features based on the stored data and so is ideal for capacity planning.&lt;/p&gt; &lt;p&gt;It supports both polling and trapping. All reports and statistics, as well as configuration parameters, are accessed through a web-based frontend. This front end ensures that the status of your network and the health of your servers can be assessed from any location. Properly configured, Zabbix can play an important role in monitoring IT infrastructure. This fact is equally true for small organizations with a few servers and for large companies with a multitude of servers. I won&amp;#8217;t cover Zabbix installation here, but there is a great &lt;a href="https://www.zabbix.com/download" target="_blank" rel="noopener noreferrer"&gt;guide&lt;/a&gt; and a &lt;a href="https://youtu.be/yYmkFf3AEBo" target="_blank" rel="noopener noreferrer"&gt;video&lt;/a&gt; in the official documentation.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;The Ceph Manager daemon&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Added in Ceph 11.x (also known as &lt;em&gt;Kraken&lt;/em&gt;) and &lt;a href="https://www.redhat.com/en/technologies/storage/ceph" target="_blank" rel="noopener noreferrer"&gt;Red Hat Ceph Storage&lt;/a&gt; version 3 (also known as &lt;i&gt;Luminous&lt;/i&gt;), the Ceph Manager daemon (&lt;code&gt;ceph-mgr&lt;/code&gt;) is required for normal operations, runs alongside monitor daemons to provide additional monitoring, and interfaces to external monitoring and management systems. At the same time, you can create modules and extend managers to provide new features. Here, we will use this ability through a Zabbix Python module that is responsible for exporting overall cluster status and performance to Zabbix server, which is the central process that performs monitoring, interacts with Zabbix proxies and agents, calculates triggers, and sends notificationsâ€”a central data repository. Obviously, you can still collect traditional metrics about your operational systems, but the Zabbix Python module will gather specific information about storage metrics and performance and send it to the Zabbix server.&lt;/p&gt; &lt;p&gt;Here are some examples of available metrics:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Ceph performance, such as I/O operations, bandwidth, and latency.&lt;/li&gt; &lt;li&gt;Storage utilization and overview.&lt;/li&gt; &lt;li&gt;Object storage daemon (OSD) status and how many are in or up.&lt;/li&gt; &lt;li&gt;Number of monitors (mons) and OSDs.&lt;/li&gt; &lt;li&gt;Number of pools and placement groups.&lt;/li&gt; &lt;li&gt;Overall Ceph status.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;The lab environment&lt;br /&gt; &lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Ceph cluster installation will not be covered here, but you can find more information about how to do that in the &lt;a href="https://docs.ceph.com/docs/master/" target="_blank" rel="noopener noreferrer"&gt;Ceph documentation&lt;/a&gt;. My storage cluster was installed using &lt;a href="https://github.com/ceph/ceph-ansible" target="_blank" rel="noopener noreferrer"&gt;&lt;code&gt;ceph-ansible&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The computing resources used were 12 instances with the same configuration, including two CPU cores, 4GB of RAM, and:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Three monitor nodes and three manager nodes (colocated).&lt;/li&gt; &lt;li&gt;Three OSD nodes with three disks per node (nine OSDs in total).&lt;/li&gt; &lt;li&gt;Two metadata server (MDS) nodes.&lt;/li&gt; &lt;li&gt;Two RADOS Gateway nodes.&lt;/li&gt; &lt;li&gt;One Ansible management node.&lt;/li&gt; &lt;li&gt;One Zabbix server node colocated (Zabbix server, MariaDB server, and Zabbix front end).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See Figure 1 for the resulting cluster&amp;#8217;s topology.&lt;/p&gt; &lt;div id="attachment_697957" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-697957" class=" size-large wp-image-697957 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/03/Cephlaptopology-1024x726.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/Cephlaptopology-1024x726.png" alt="Figure showing the topology for the lab's Ceph cluster." width="640" height="454" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/Cephlaptopology-1024x726.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/Cephlaptopology-300x213.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/Cephlaptopology-768x544.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/Cephlaptopology.png 1026w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-697957" class="wp-caption-text"&gt;Figure 1: The Lab&amp;#8217;s cluster topology.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The software resources this lab used are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;The &lt;em&gt;base&lt;/em&gt; OS for all instances:&lt;/strong&gt; Red Hat Enterprise Linux 7.7&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Cluster storage nodes:&lt;/strong&gt; Red Hat Ceph Storage 4.0&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Management and automation:&lt;/strong&gt; Ansible 2.8&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Monitoring:&lt;/strong&gt; Zabbix 4.4&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Considering that my cluster is installed and ready, here is the health, service, and task status:&lt;/p&gt; &lt;pre&gt;[user@mons-0 ~]$ sudo ceph -s Â  cluster: Â Â Â  id: Â Â Â  7f528221-4110-40d7-84ff-5fbf939dd451 Â Â Â  health: HEALTH_OK Â  services: Â Â Â  mon: 3 daemons, quorum mons-1,mons-2,mons-0 (age 37m) Â Â Â  mgr: mons-0(active, since 3d), standbys: mons-1, mons-2 Â Â Â  mds: cephfs:1 {0=mdss-0=up:active} 1 up:standby Â Â Â  osd: 9 osds: 9 up (since 35m), 9 in (since 3d) Â Â Â  rgw: 2 daemons active (rgws-0.rgw0, rgws-1.rgw0) Â  task status: Â  data: Â Â Â  pools: Â  8 pools, 312 pgs Â Â Â  objects: 248 objects, 6.1 KiB Â Â Â  usage: Â  9.1 GiB used, 252 GiB / 261 GiB avail Â Â Â  pgs: Â Â Â  312 active+clean &lt;/pre&gt; &lt;h3&gt;&lt;b&gt;How to enable the Zabbix dashboard module&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;The Zabbix module is included in the &lt;code&gt;ceph-mgr&lt;/code&gt; package and you must deploy your Ceph cluster with a manager service enabled. To enable the Zabbix module with a single command in one of the &lt;code&gt;ceph-mgr&lt;/code&gt; nodes, use this:&lt;/p&gt; &lt;pre&gt;[user@mons-0 ~]$ sudo ceph mgr module enable zabbix&lt;/pre&gt; &lt;p&gt;You can check if the Zabbix module is enabled through the following command:&lt;/p&gt; &lt;pre&gt;[user@mons-0 ~]$ sudo ceph mgr module ls | head -5 { "enabled_modules": [ "dashboard", "prometheus", "zabbix" &lt;/pre&gt; &lt;h3&gt;&lt;b&gt;Sending data from the Ceph cluster to Zabbix&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;This solution uses the Zabbix sender utility, which is a command-line tool that can send performance data to Zabbix server for processing purposes. The utility is often used in long-running user scripts for periodically sending availability and performance data. It can be installed on most distributions using the package manager. You should install the &lt;code&gt;zabbix_sender&lt;/code&gt; executable on &lt;i&gt;all&lt;/i&gt; machines running &lt;code&gt;ceph-mgr&lt;/code&gt; for high availability&lt;i&gt;.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s enable Zabbix repositories and install &lt;code&gt;zabbix_sender&lt;/code&gt; in all Ceph Manager nodes:&lt;/p&gt; &lt;pre&gt;[user@mons-0 ~]$ sudo rpm -Uvh https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm [user@mons-0 ~]$ sudo yum clean all [user@mons-0 ~]$ sudo yum install zabbix-sender -y&lt;/pre&gt; &lt;p&gt;Alternatively, you can automate this installation. Instead of running three commands on three different nodes, use Ansible to run them together as a single command in each of the three manager nodes:&lt;/p&gt; &lt;pre&gt;[user@mgmt ~]$ ansible mgrs -m command -a "sudo rpm -Uvh &lt;a href="https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm"&gt;https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm&lt;/a&gt;" [user@mgmt ~]$ ansible mgrs -m command -a "sudo yum clean all" [user@mgmt ~]$ ansible mgrs -m command -a "sudo yum install zabbix-sender -y" &lt;/pre&gt; &lt;h3&gt;&lt;b&gt;Configuring the module&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;After understanding how everything works, you just need a piece of configuration to make this module work accurately. The two required &lt;em&gt;items&lt;/em&gt; are &lt;code&gt;zabbix_host&lt;/code&gt; and the identifier (an item is &lt;i&gt;a particular piece of data that you want to receive from a host&lt;/i&gt;, a metric of data). The &lt;code&gt;zabbix_host&lt;/code&gt; setting points to theÂ Zabbix server&amp;#8217;s host name or IP address, to which &lt;code&gt;zabbix_sender&lt;/code&gt; will send the items as a trap, while &lt;code&gt;identifier&lt;/code&gt; is a Ceph cluster identifier parameter in Zabbix. This parameter controls the identifier/host name to use as the source when sending items to Zabbix. This setting should match the name of the host in your Zabbix server.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don&amp;#8217;t configure the &lt;code&gt;identifier&lt;/code&gt; parameter, the &lt;code&gt;ceph-&amp;#60;fsid&amp;#62;&lt;/code&gt; of the cluster will be used when sending data to Zabbix. The result would be, for example, &lt;code&gt;ceph-c6d33a98-8e90-790f-bd3a-1d22d8a7d354&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Optionally, you have many other configuration keys that can be configured. Here are a few with their default values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;&lt;code&gt;zabbix_port&lt;/code&gt;:&lt;/b&gt; TCP port where Zabbix server runs (default: 10051).&lt;/li&gt; &lt;li&gt;&lt;b&gt;&lt;code&gt;zabbix_sender&lt;/code&gt;:&lt;/b&gt; Path for the Zabbix sender binary (default:/usr/bin/zabbix_sender).&lt;/li&gt; &lt;li&gt;&lt;b&gt;&lt;code&gt;interval&lt;/code&gt;:&lt;/b&gt; Update interval for the specified time period during which &lt;code&gt;zabbix_sender&lt;/code&gt; sends the data for Zabbix server (default: 60 seconds).&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;b&gt;Configuring your keys&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Configuration keys can be set on any server with the proper CephX credentials. These are usually monitors, where the &lt;code&gt;client.admin&lt;/code&gt; key is available:&lt;/p&gt; &lt;pre&gt;[user@mons-0 ~]$ sudo ceph zabbix config-set zabbix_host zabbix.lab.example [user@mons-0 ~]$ sudo ceph zabbix config-set identifier ceph4-cluster-example [user@mons-0 ~]$ sudo ceph zabbix config-set interval 120&lt;/pre&gt; &lt;p&gt;The module&amp;#8217;s current configuration can also be shown through the following command:&lt;/p&gt; &lt;pre&gt;[user@mons-0 ~]$ sudo ceph zabbix config-showÂ  {"zabbix_port": 10051, "zabbix_host": "zabbix.lab.example", "identifier": "ceph4-cluster-example", "zabbix_sender": "/usr/bin/zabbix_sender", "interval": 120} &lt;/pre&gt; &lt;h2&gt;&lt;b&gt;Exploring Zabbix: Templates, host creation, and dashboards&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;It&amp;#8217;s time to import your template. In the Zabbix world, a template is a set of entities that can be conveniently applied to multiple hosts. These entities might be items, triggers, graphs, discovery rules, etc. Your base will be the items. When a template is linked to a host, all entities in the template are added to the host. Templates are assigned to each individual host directly.&lt;/p&gt; &lt;p&gt;Take a moment to download the &lt;a href="https://github.com/ceph/ceph/blob/master/src/pybind/mgr/zabbix/zabbix_template.xml" target="_blank" rel="noopener noreferrer"&gt;Zabbix template&lt;/a&gt; for Ceph, which is available in the source directory as an XML file:&lt;/p&gt; &lt;pre&gt;[user@mylaptop ~]$ curl https://raw.githubusercontent.com/ceph/ceph/master/src/pybind/mgr/zabbix/zabbix_template.xml -o zabbix_template.xml&lt;/pre&gt; &lt;p&gt;It&amp;#8217;s important to download this template file locally in raw mode or you will have problems importing in the next step. Then, to import the template into Zabbix (as shown in Figure 2), do the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Go to &lt;strong&gt;Configuration â†’ Templates&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Click on &lt;strong&gt;Import&lt;/strong&gt; to the right.&lt;/li&gt; &lt;li&gt;Select the import file.&lt;/li&gt; &lt;li&gt;Click the &lt;strong&gt;Import&lt;/strong&gt; button.&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Import&lt;/strong&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_686607" style="width: 646px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686607" class=" size-large wp-image-686607 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c6ee06eccb.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c6ee06eccb.png" alt="The Zabbix Import screen." width="636" height="495" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c6ee06eccb.png 867w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c6ee06eccb-300x234.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c6ee06eccb-768x598.png 768w" sizes="(max-width: 636px) 100vw, 636px" /&gt;&lt;p id="caption-attachment-686607" class="wp-caption-text"&gt;Figure 2: Importing a Zabbix template.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Afterward, an import success or failure message will be displayed in the front end. Once you import the template successfully, configure a host in the Zabbix front end and link to the newly created template (as shown in Figure 3) by doing the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Go to &lt;strong&gt;Configuration â†’ Hosts&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Click on the &lt;strong&gt;Create host&lt;/strong&gt; button to the right.&lt;/li&gt; &lt;li&gt;Enter the host name and the group(s).&lt;/li&gt; &lt;li&gt;Link the Ceph template.&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_686687" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686687" class=" size-large wp-image-686687 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c72f702c09-1024x757.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c72f702c09-1024x757.png" alt="The Zabbix Hosts screen open to the Host tab." width="640" height="473" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c72f702c09-1024x757.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c72f702c09-300x222.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c72f702c09-768x568.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c72f702c09.png 1120w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-686687" class="wp-caption-text"&gt;Figure 3: Creating your Ceph cluster host and adding it to a group.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;Host name&lt;/strong&gt; and &lt;strong&gt;Groups&lt;/strong&gt; are required fields. Make sure that the host has the same name as the identifier configured in the Ceph &lt;code&gt;config-key&lt;/code&gt; parameter. There are many groups available, and you can either choose one or create a new one. For the purpose of this lab, choose &lt;b&gt;Linux servers&lt;/b&gt;.&lt;/p&gt; &lt;p&gt;In the &lt;strong&gt;Templates&lt;/strong&gt; tab (as shown in Figure 4), choose the &lt;b&gt;ceph-mgr Zabbix module&lt;/b&gt; that you imported before, and click &lt;strong&gt;Select&lt;/strong&gt;. When that dialog box closes, click &lt;b&gt;Add&lt;/b&gt;.&lt;/p&gt; &lt;div id="attachment_686637" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c.png"&gt;&lt;img aria-describedby="caption-attachment-686637" class=" size-large wp-image-686637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c-1024x304.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c-1024x304.png" alt="Zabbits open to Hosts -&amp;#62; Templates." width="640" height="190" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c-1024x304.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c-300x89.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c-768x228.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e4c70970652c.png 1305w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-686637" class="wp-caption-text"&gt;Figure 4: Linking the Ceph template to the host.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now your configuration is complete. After a few minutes, data should start to appear in the Zabbix web interface under the &lt;strong&gt;Monitoring -&amp;#62; Latest Data&lt;/strong&gt; menu, and graphs will start to populate for the host. Many triggers are already configured in the template, which will send out notifications if you configure your actions and operations.&lt;/p&gt; &lt;p&gt;&lt;span class="tlid-translation translation" lang="en"&gt;&lt;span class="" title=""&gt;After the data is collected&lt;/span&gt;&lt;/span&gt;, you can easily create Ceph dashboards and have fun with Zabbix, as shown in Figure 5:&lt;/p&gt; &lt;div id="attachment_690177" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e5803a8cd966.png"&gt;&lt;img aria-describedby="caption-attachment-690177" class=" size-large wp-image-690177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e5803a8cd966-1024x496.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e5803a8cd966-1024x496.png" alt="The Ceph dashboard with Zabbix data displayed." width="640" height="310" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e5803a8cd966-1024x496.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e5803a8cd966-300x145.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/img_5e5803a8cd966-768x372.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-690177" class="wp-caption-text"&gt;Figure 5: An example Zabbix Ceph dashboard.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, you learned how to build a monitoring system for Ceph storage using Zabbix. This system improves your visibility into your storage system&amp;#8217;s health, which helps you proactively identify possible failed events and performance issues before they impact your applications and even your business&amp;#8217;s continuity.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#38;linkname=Ceph%20storage%20monitoring%20with%20Zabbix" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F23%2Fceph-storage-monitoring-with-zabbix%2F&amp;#038;title=Ceph%20storage%20monitoring%20with%20Zabbix" data-a2a-url="https://developers.redhat.com/blog/2020/03/23/ceph-storage-monitoring-with-zabbix/" data-a2a-title="Ceph storage monitoring with Zabbix"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/23/ceph-storage-monitoring-with-zabbix/"&gt;Ceph storage monitoring with Zabbix&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1GfBUM2HVz0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Storage prices are decreasing, while business demands are growing, and companies are storing more data than ever before. Following this growth pattern, demand grows for monitoring and data protection involving software-defined storage. Downtimes have a high cost that can directly impact business continuity and cause irreversible damage to organizations. Aftereffects include loss of assets and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/23/ceph-storage-monitoring-with-zabbix/"&gt;Ceph storage monitoring with Zabbix&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">684817</post-id><dc:creator>Alessandro Silva</dc:creator><dc:date>2020-03-23T07:00:22Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/23/ceph-storage-monitoring-with-zabbix/</feedburner:origLink></entry><entry><title>Apache Camel 3.1 - Fast loading of XML routes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tjRctVYmjyc/apache-camel-31-fast-loading-of-xml.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_1_fast_loading_of_xml_routes</id><updated>2020-03-22T17:45:42Z</updated><published>2020-03-22T17:45:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;A feature that was added to Camel 3.1 is the ability to load XML routes much faster. This is part of the overall work we are doing on making Camel much smaller and faster.&lt;br /&gt;&lt;br /&gt;You may say ewww XML. But frankly there are many users of Camel that have built applications with XML for defining routes. In Camel 2.x then you would have to use Spring or OSGi Blueprint for XML routes which both are becoming heavy in modern cloud native world.&lt;br /&gt;&lt;br /&gt;In Camel 3 we have a standalone mode for Camel called camel-main. We use camel-main as a common way to bootstrap and configure Camel for standalone, camel-k, camel-quarkus, and for most parts of camel-spring-boot as well. This ensures an unified and consistent developer experience across those runtimes.&lt;br /&gt;&lt;br /&gt;Okay this is probably a topic for another blog post to dive into camel-main as a great runtime for quickly running ... just Camel.&lt;br /&gt;&lt;br /&gt;So what I wanted to say in this blog post is that we have made it possible to loading XML routes much quicker and with a lot less overhead. In Camel 2.x, and for Spring XML and Blueprint XML they rely on JAXP and JAXB which ... are heavy.&lt;br /&gt;&lt;br /&gt;So what we have done for Camel 3.1 is to source code generate a XML parser based on the Camel DSL. This means anything we do changes to the DSL then the parser is re-generated. The parser just uses standard Java so there are no additional 3rd party library dependencies.&lt;br /&gt;&lt;br /&gt;For loading XML routes in Camel we now have 2 parsers in the following JARs&lt;br /&gt;&lt;br /&gt;- &lt;b&gt;camel-xml-jaxb&lt;/b&gt;&amp;nbsp; &amp;nbsp;(traditional JAXB based as in Camel 2.x)&lt;br /&gt;- &lt;b&gt;camel-xml-io&amp;nbsp;&lt;/b&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;(new fast and lightweight source code generated parsers)&lt;br /&gt;&lt;br /&gt;The example &lt;a href="https://github.com/apache/camel-examples/tree/master/examples/camel-example-main-xml"&gt;camel-example-main-xml&lt;/a&gt; is setup to use the new parser. But you can try for yourself and switch to the jaxb parser by changing the JAR dependency.&lt;br /&gt;&lt;br /&gt;Lets see some numbers (note this is just a quick test on my laptop to run this example with the 2 XML parsers).&lt;br /&gt;&lt;br /&gt;camel-xml-jaxb: Loaded 1 (&lt;b&gt;808 millis&lt;/b&gt;) additional Camel XML routes from: routes/*.xml&lt;br /&gt;camel-xml-io:&amp;nbsp;Loaded 1 (&lt;b&gt;76 millis&lt;/b&gt;) additional Camel XML routes from: routes/*.xml&lt;br /&gt;&lt;br /&gt;So the new parser is about 10 times faster (76 vs 808 millis).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-aBAzocQ7A-U/XnekHKgfSDI/AAAAAAAACHo/6npV4MOyjTIJxo-BuyNW8OaYG5tKK-TswCLcBGAsYHQ/s1600/xml-fast.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="170" data-original-width="486" height="138" src="https://1.bp.blogspot.com/-aBAzocQ7A-U/XnekHKgfSDI/AAAAAAAACHo/6npV4MOyjTIJxo-BuyNW8OaYG5tKK-TswCLcBGAsYHQ/s400/xml-fast.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;By profiling the JVM we can see that there is a lot less classes loaded as well: 4734 vs 3892. And on top of that JAXB leaves more objects and classes around in the JVM that may or may not easily be garbage collected, and would also be using more cpu and memory during its parsing.&lt;br /&gt;&lt;br /&gt;And then on GraalVM then the new parser would be much quicker as you can avoid having the entire JAXB and JAXP API and implementation on the classpath and for the GraalVM compiler to crunch and compile. And speaking of GraalVM then we are working on some great improvements in the upcoming Camel 3.2 that should help reduce the image size and compilation, and allow to do more dead code elimination and whatnot to make Camel even more awesome. That's yet another topic for another blog post, so stay tuned.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DBQ6ctGj300:-6kO-JmoZkk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DBQ6ctGj300:-6kO-JmoZkk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=DBQ6ctGj300:-6kO-JmoZkk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DBQ6ctGj300:-6kO-JmoZkk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=DBQ6ctGj300:-6kO-JmoZkk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=DBQ6ctGj300:-6kO-JmoZkk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=DBQ6ctGj300:-6kO-JmoZkk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/DBQ6ctGj300" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tjRctVYmjyc" height="1" width="1" alt=""/&gt;</content><summary>A feature that was added to Camel 3.1 is the ability to load XML routes much faster. This is part of the overall work we are doing on making Camel much smaller and faster. You may say ewww XML. But frankly there are many users of Camel that have built applications with XML for defining routes. In Camel 2.x then you would have to use Spring or OSGi Blueprint for XML routes which both are becoming h...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2020-03-22T17:45:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/DBQ6ctGj300/apache-camel-31-fast-loading-of-xml.html</feedburner:origLink></entry><entry><title>Apache Camel 3.2 - Reflection free configuration of Camel</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rxbCiQA0Qdw/apache-camel-32-reflection-free.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_2_reflection_free_configuration_of_camel</id><updated>2020-03-22T09:37:35Z</updated><published>2020-03-22T09:37:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;At the Apache Camel project we are working towards the next upcoming Apache Camel 3.2.0 release, which is planned for next month.&lt;br /&gt;&lt;br /&gt;One of the ares we have worked hard on in Camel 3 is to make it smaller and faster. And one aspect of this is also configuration management. You can fully configure Camel in many ways and according to the 12 factor principles, to keep configuration separated from the application. A popular way to configure is to use properties files (eg application.properties) or in Kubernetes you can configure from config maps or environment variables as well.&lt;br /&gt;&lt;br /&gt;So we have gradually over Camel 3.0, 3.1 and now 3.2 made configuration faster. With the latest work we are now fully reflection free.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-6jK6piCIdsY/Xncw02SZu-I/AAAAAAAACHc/9jnfMfzDUUErCgbsMtEQ8pI0Vq7DTrFWQCLcBGAsYHQ/s1600/fast-camel.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="334" data-original-width="600" height="222" src="https://1.bp.blogspot.com/-6jK6piCIdsY/Xncw02SZu-I/AAAAAAAACHc/9jnfMfzDUUErCgbsMtEQ8pI0Vq7DTrFWQCLcBGAsYHQ/s400/fast-camel.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Camel is capable of reporting when reflection based configuration are being used. Which can be configured with:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;# bean introspection to log reflection based configuration&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;camel.main.beanIntrospectionExtendedStatistics=true&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;camel.main.beanIntrospectionLoggingLevel=INFO&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;We have prepared the camel-example-main-tiny to report this. The numbers for Camel 3.0, 3.1, and 3.2 are as follows:&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Camel 3.0: BeanIntrospection invoked: 12 times&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Camel 3.1:&amp;nbsp;Stopping BeanIntrospection which was invoked: 11 times&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Camel 3.2:&amp;nbsp;Stopping BeanIntrospection which was invoked: 0 times&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;What this means is that you can fully configure all your Camel endpoints, components, routes, EIPs, data formats, languages, camel main, camel context, and whatnot, in declarative properties files etc and then at runtime all of this ends up invoking the actual setter methods on all these instances (ie just direct java method calls, no java.lang.reflect).&lt;br /&gt;&lt;br /&gt;This is possible because we source code generate &lt;b&gt;configurer&lt;/b&gt; classes based on what options are present. And these configurer classes are reflection free. There can be many options so it would be impossible to implement this by hand, see for example the &lt;a href="https://github.com/apache/camel/blob/master/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaEndpointConfigurer.java"&gt;kafka endpoint configurer&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;And btw another feature coming in Camel 3.2 is that we made all of the components options available for configuration, before we didn't include nested configuration options. And if you do not like configuring in properties files, then we have type-safe component-dsl and &lt;a href="https://camel.apache.org/manual/latest/Endpoint-dsl.html"&gt;endpoint-dsl&lt;/a&gt; as well.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=poKG7A6PJ2c:UUNVv61DPq4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=poKG7A6PJ2c:UUNVv61DPq4:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=poKG7A6PJ2c:UUNVv61DPq4:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=poKG7A6PJ2c:UUNVv61DPq4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=poKG7A6PJ2c:UUNVv61DPq4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=poKG7A6PJ2c:UUNVv61DPq4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=poKG7A6PJ2c:UUNVv61DPq4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/poKG7A6PJ2c" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rxbCiQA0Qdw" height="1" width="1" alt=""/&gt;</content><summary>At the Apache Camel project we are working towards the next upcoming Apache Camel 3.2.0 release, which is planned for next month. One of the ares we have worked hard on in Camel 3 is to make it smaller and faster. And one aspect of this is also configuration management. You can fully configure Camel in many ways and according to the 12 factor principles, to keep configuration separated from the ap...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2020-03-22T09:37:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/poKG7A6PJ2c/apache-camel-32-reflection-free.html</feedburner:origLink></entry><entry><title>JBoss Editorial (March 20th): CDI, Kafka, SaaS and Kogito</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z5714Pflox0/jboss-editorial-march-20th-cdi-kafka-saas-and-kogito" /><category term="Blueprints" scheme="searchisko:content:tags" /><category term="BPMN" scheme="searchisko:content:tags" /><category term="CDI" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="DMN" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Kafka" scheme="searchisko:content:tags" /><category term="kie" scheme="searchisko:content:tags" /><category term="kogito" scheme="searchisko:content:tags" /><category term="news" scheme="searchisko:content:tags" /><category term="Open Liberty" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="weekly_update" scheme="searchisko:content:tags" /><author><name>kconner</name></author><id>searchisko:content:id:jbossorg_blog-jboss_editorial_march_20th_cdi_kafka_saas_and_kogito</id><updated>2020-03-20T23:53:44Z</updated><published>2020-03-20T23:53:44Z</published><content type="html">&lt;!-- [DocumentBodyStart:19e940c5-628d-412e-a371-d47d5f1aa890] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Welcome to another edition of the JBoss Editorial where we explore our Communities for news and developments from our projects.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;CDI for the Future&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;With the CDI specification recently turning 10 years old Antoine has turned his attention to where he believes the CDI specifications need to adapt in order to be successful for the next 10 years.&amp;#160; Focussing on the requirements from areas such as the cloud, mobile devices, support for alternative languages and native compilation Antoine &lt;a class="jive-link-external-small" href="http://www.cdi-spec.org/news/2020/03/09/CDI_for_the_future/" rel="nofollow"&gt;presents his vision for the advancement of the CDI specs through the introduction of a CDI Lite specification, covering what he believes should be included within scope and what should be excluded&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Accessing Kafka Specific Message Properties in Open Liberty 20.0.0.3&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/" rel="nofollow"&gt;Open Liberty 20.0.0.3 introduces a new client API which exposes Kafka specific properties in addition to the message payload&lt;/a&gt;.&amp;#160; For incoming messages the user can now unwrap a &lt;strong&gt;Message&lt;/strong&gt; and gain access to the underlying &lt;strong&gt;ConsumerRecord&lt;/strong&gt; and for outgoing messages the properties set on a &lt;strong&gt;ProducerRecord&lt;/strong&gt; will be passed through to Kafka.&amp;#160; OpenLiberty will now also allow the SameSite attribute to be set on the session cookie, the LTPA, the JWT cookies as well as application defined cookies.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Integrating with SaaS Applications&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In the next article in his series exploring the blueprints of integrating with SaaS applications Eric discusses &lt;a class="jive-link-external-small" href="https://www.schabell.org/2020/03/integrating-saas-applications-example-third-party-platform-integration.html" rel="nofollow"&gt;a blueprint for exposing legacy or third party platforms within your cloud or SaaS service using technologies such as an API Gateway, Single Sign On and integration technologies such as Fuse&lt;/a&gt;.&amp;#160; The blueprint enables organisations to gradually migrate their existing functionality from their existing approaches to cloud native approaches.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Building a Retail Web Shop Workshop&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Following the many updates to the open source decision management technologies Eric has revamped his &lt;a class="jive-link-external-small" href="https://bpmworkshop.gitlab.io/rhdm/#/1" rel="nofollow"&gt;Beginner's Guide Workshop&lt;/a&gt; which &lt;a class="jive-link-external-small" href="https://www.schabell.org/2020/03/beginners-guide-building-retail-web-shop-workshop.html" rel="nofollow"&gt;teaches how to use decision management tooling through a project building your own online retail web shop&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Kogito from Knowledge to Service&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The &lt;a class="jive-link-external-small" href="https://www.kiegroup.org/" rel="nofollow"&gt;KIE Group&lt;/a&gt; are moving quickly in their efforts to redesign the Drools based technologies to run at scale on cloud infrastructure through the &lt;a class="jive-link-external-small" href="https://kogito.kie.org/" rel="nofollow"&gt;Kogito Open Source project&lt;/a&gt;.&amp;#160; If you are unfamiliar with these efforts then you will want to read Eduardo's post &lt;a class="jive-link-external-small" href="http://blog.athico.com/2020/03/kogito-ergo-rules-from-knowledge-to.html" rel="nofollow"&gt;where he demonstrates how to realise an intelligence service as a self contained REST endpoint and as an embedded integration within a workflow&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;JBoss Out and About&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Following the announcement that this year's Red Hat Summit will be moving to a free, virtual event &lt;a class="jive-link-external-small" href="https://www.schabell.org/2020/03/red-hat-summit-2020-now-free-virtual-event.html" rel="nofollow"&gt;Eric has confirmed the session he is presenting along side Christina Lin&lt;/a&gt;, entitled "&lt;a class="jive-link-external-small" href="https://www.schabell.org/2019/12/red-hat-summit-2020-advanced-agile-integration-blueprint.html" rel="nofollow"&gt;Concept to Reality: An Advanced Agile Integration Blueprint&lt;/a&gt;", will be delivered as a live, online session.&amp;#160; The schedule is still being worked on so stay tuned for further updates as the event draws near.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;New Releases&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="https://www.kiegroup.org/" rel="nofollow"&gt;KIE group&lt;/a&gt; have announced&lt;ul&gt;&lt;li&gt;the release of a &lt;a class="jive-link-external-small" href="http://blog.athico.com/2020/03/business-modeler-preview-now-available.html" rel="nofollow"&gt;preview version of the DMN and BPMN editors online&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;the release of &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/" rel="nofollow"&gt;Kogito 0.8.0&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;That's all for this edition of the Editorial, please join us again for our next instalment where we will bring you more news and developments from across the JBoss Communities&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:19e940c5-628d-412e-a371-d47d5f1aa890] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z5714Pflox0" height="1" width="1" alt=""/&gt;</content><summary>Welcome to another edition of the JBoss Editorial where we explore our Communities for news and developments from our projects. Â  CDI for the Future Â  With the CDI specification recently turning 10 years old Antoine has turned his attention to where he believes the CDI specifications need to adapt in order to be successful for the next 10 years.Â  Focussing on the requirements from areas such as th...</summary><dc:creator>kconner</dc:creator><dc:date>2020-03-20T23:53:44Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2020/03/20/jboss-editorial-march-20th-cdi-kafka-saas-and-kogito</feedburner:origLink></entry><entry><title>Kogito 0.8.0 features online editors and cloud-native business automation</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BnFz5dlB_0Y/" /><category term="Java" /><category term="Kubernetes" /><category term="VS Code" /><category term="BPMN" /><category term="business automation" /><category term="DMN" /><category term="istio" /><category term="Kogito" /><author><name>Karina Varela</name></author><id>https://developers.redhat.com/blog/?p=695697</id><updated>2020-03-20T07:00:10Z</updated><published>2020-03-20T07:00:10Z</published><content type="html">&lt;p&gt;&lt;a href="http://kogito.kie.org/" target="_blank" rel="noopener noreferrer"&gt;Kogito&lt;/a&gt; is a cloud-native business automation solution that offers a powerful, developer-friendly experience. Based on production-tested open source projects Drools and jBPM, Kogito has business rules and processes down to a science. Kogito also aligns with popular lightweight runtimes such as &lt;a href="https://developers.redhat.com/blog/2019/08/29/kogito-for-quarkus-intelligent-applications/" target="_blank" rel="noopener noreferrer"&gt;Quarkus&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2019/08/29/create-your-first-application-with-kogito/" target="_blank" rel="noopener noreferrer"&gt;Spring Boot&lt;/a&gt; to support developers building business-driven applications.&lt;/p&gt; &lt;p&gt;This article is an overview of the new enhancements for Kogito 0.8.0, which was released on March 10, 2020.&lt;/p&gt; &lt;p&gt;&lt;span id="more-695697"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Kogito Runtimes and Kogito Tooling&lt;/h2&gt; &lt;p&gt;Kogito is a young technology that is quickly evolving. For this release, developers targeted updates and feature enhancements for Kogito Runtimes and Kogito Tooling. Kogito Runtimes enables applications to execute business processes and decisions. Its components facilitate the deployment of business applications in &lt;a href="https://www.openshift.com" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&lt;/a&gt;, a container platform built on Kubernetes. Meanwhile, Kogito Tooling delivers authoring tools and environments that support the lifecycle of business-driven applications.&lt;/p&gt; &lt;p&gt;&lt;img class="wp-image-695837 alignleft" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/kogito_icon_rgb_color_default_256px.png" alt="" width="62" height="62" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/kogito_icon_rgb_color_default_256px.png 256w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/kogito_icon_rgb_color_default_256px-150x150.png 150w" sizes="(max-width: 62px) 100vw, 62px" /&gt;&lt;/p&gt; &lt;h2&gt;Highlights and new features&lt;/h2&gt; &lt;p&gt;The Kogito 0.8.0Â release includes more than 25 new feature requests, 35 enhancements, and over 40 bug fixes to Kogito Runtimes. Updates to Kogito Tooling were also robust, including bug fixes and enhancements to the VS Code editor, Chrome extensions for Business Process Model and Notation (BPMN) and Decision Model and Notation (DMN), and new online editors.&lt;/p&gt; &lt;p&gt;This section covers highlights and new features to look for in Kogito Runtimes and Kogito Tooling. See the &lt;a href="https://groups.google.com/forum/?utm_medium=email&amp;#38;utm_source=footer#!msg/kogito-development/hx9LkWj6Dyc/LIEFbUBqAgAJ" target="_blank" rel="noopener noreferrer"&gt;Kogito Google Group&lt;/a&gt; and the &lt;a href="https://github.com/kiegroup/kogito-tooling/releases" target="_blank" rel="noopener noreferrer"&gt;Kogito Tooling GitHub page&lt;/a&gt; for a complete list of updates and enhancements.&lt;/p&gt; &lt;h3&gt;Online authoring tools&lt;/h3&gt; &lt;p&gt;One of Kogito&amp;#8217;s goals is to increase productivity for business automation experts, and a sure way to do that is to support business managers authoring executable business logic in the cloud. With this release, we&amp;#8217;re proud to present &lt;a href="https://kiegroup.github.io/kogito-online/" target="_blank" rel="noopener noreferrer"&gt;Kogito online editors for BPMN and DMN&lt;/a&gt;. These ready-to-use online tools do not require any local setup.&lt;/p&gt; &lt;p&gt;Anyone can use these new editors to sketch business-process diagrams based on BPMN or business decisions based on DMN specifications. Figure 1, courtesy of &lt;a href="https://porcelli.me/announcement/tooling/online/bpmn/dmn/2020/03/12/online-new-editors.html" target="_blank" rel="noopener noreferrer"&gt;Alex Porcelli&lt;/a&gt;, demonstrates the DMN online editor. (If this image does not animate, click it to watch the walk-through.)&lt;/p&gt; &lt;div id="attachment_695787" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample.gif"&gt;&lt;img aria-describedby="caption-attachment-695787" class="wp-image-695787 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-1024x516.gif" alt="Animated image showing how you can edit your DMN in Kogito." width="640" height="323" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-1024x516.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-300x151.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-768x387.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-695787" class="wp-caption-text"&gt;Figure 1: Kogito&amp;#8217;s DMN online editor (source: &lt;a href="https://porcelli.me/announcement/tooling/online/bpmn/dmn/2020/03/12/online-new-editors.html" target="_blank" rel="noopener noreferrer"&gt;Alex Porcelli&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With this release, we&amp;#8217;ve also integrated Google&amp;#8217;s &lt;a href="https://www.techradar.com/news/google-brings-its-new-tld-to-the-rest-of-the-internet" target="_blank" rel="noopener noreferrer"&gt;.new domain initiative&lt;/a&gt;.Â You can try out the community editors supporting the .new domain at &lt;a href="http://bpmn.new" target="_blank" rel="noopener noreferrer"&gt;bpmn.new&lt;/a&gt; and &lt;a href="http://dmn.new" target="_blank" rel="noopener noreferrer"&gt;dmn.new&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Kogito Management Console&lt;/h3&gt; &lt;p&gt;The new Kogito Management Console takes a fresh approach to viewing and managing process instances (see Figure 2, if this image does not animate, click it to watch the walk-through.) Backed by the Kogito Data Index, the new management console supports visualization and management from both a process-instance perspective and a domain-based view. As a developer, this means you&amp;#8217;ll get a detailed view of running process instances, along with variables, related subprocesses, and task execution.&lt;/p&gt; &lt;div id="attachment_698597" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280.gif"&gt;&lt;img aria-describedby="caption-attachment-698597" class="wp-image-698597 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-1024x640.gif" alt="Kogito Management Console open to Process instances." width="640" height="400" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-1024x640.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-300x188.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-768x480.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-698597" class="wp-caption-text"&gt;Figure 2: View and manage process instances (source: &lt;a href="https://github.com/kmacedovarela/images-repo/tree/master/kogito-management-console" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Developers can also use the Kogito Domain Explorer to navigate business data in a selected domain. As an example, Figure 3 shows the visualization of a travel-agency domain that tracks client travels and travel visas. (If this image does not animate, click it to watch the walk-through.)&lt;/p&gt; &lt;div id="attachment_698657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280.gif"&gt;&lt;img aria-describedby="caption-attachment-698657" class="wp-image-698657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-1024x640.gif" alt="Kogito Management Console Domain Explorer example" width="640" height="400" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-1024x640.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-300x188.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-768x480.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-698657" class="wp-caption-text"&gt;Figure 3: Navigate business data within a domain (source: &lt;a href="https://github.com/kmacedovarela/images-repo/tree/master/kogito-management-console" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Meaningful process IDs&lt;/h3&gt; &lt;p&gt;The addition of meaningful process IDs in Kogito 0.8.0 simplifies the correlation of new processes with existing business information. While you may still use autogenerated process IDs, you now have the option to create a unique reference based on a business key.&lt;/p&gt; &lt;p&gt;You would create a unique reference by issuing a query parameter named &lt;code&gt;businessKey&lt;/code&gt; along with your request to start a new process instance. If you wanted to start an order process correlated to the business key ORDER-0001, for instance, you would issue a request like this one:&lt;/p&gt; &lt;pre&gt;POST /orders?businessKey=ORDER-0001 &lt;/pre&gt; &lt;p&gt;You would then be able to retrieve the new process instance with the new reference ID:&lt;/p&gt; &lt;pre&gt;GET /orders/ORD-0001 &lt;/pre&gt; &lt;p&gt;You could also delete the process instance by sending an HTTP delete request with the same reference ID:&lt;/p&gt; &lt;pre&gt;DELETE /orders/ORD-0001 &lt;/pre&gt; &lt;h3&gt;Process-variable tagging&lt;/h3&gt; &lt;p&gt;The Kogito runtime now provides support for process-variable tagging. This feature allows developers to provide metadata about a process variable, and even group processes according to their needs. You could use this feature to group and classify important business KPIs; process inputs and outputs; and tag variables as required, internal, or read-only. See &lt;a href="https://issues.redhat.com/browse/KOGITO-19" target="_blank" rel="noopener noreferrer"&gt;KOGITO-19&lt;/a&gt; to learn more about this enhancement.&lt;/p&gt; &lt;h3&gt;Kogito Operator and Kogito CLI&lt;/h3&gt; &lt;p&gt;Kogito Operator and Kogito CLI are both existing tools that have been enhanced with new features. Based on the popular &lt;a href="https://developers.redhat.com/products/openshift/overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;, Kogito Operator supports deploying Kogito Runtimes directly from the project&amp;#8217;s source. As a developer, you can interact with Kogito Operator from the Kogito CLI.&lt;/p&gt; &lt;p&gt;One of the new parameters available on the Kogito CLI is &lt;code&gt;-enable-istio&lt;/code&gt;. Setting this parameter upon creating a new Kogito application instructs Kogito Operator to enable &lt;a href="https://istio.io/docs/concepts/what-is-istio/" target="_blank" rel="noopener noreferrer"&gt;Istio service mesh sidecars&lt;/a&gt;. Once enabled, the sidecars automatically combine tracing, security, observability, and monitoring in your Kogito pods.&lt;/p&gt; &lt;h3&gt;Kogito Jobs Service&lt;/h3&gt; &lt;p&gt;The new &lt;a href="https://github.com/kiegroup/kogito-runtimes/wiki/Jobs-Service" target="_blank" rel="noopener noreferrer"&gt;Kogito Jobs Service&lt;/a&gt; offers a dedicated, lightweight solution for job scheduling. This service is currently able to schedule two types of jobs. A &lt;em&gt;time scheduled job&lt;/em&gt; executes only once, at a given point in time, while a &lt;em&gt;periodically scheduled job&lt;/em&gt; starts at a given point in time and executes a predetermined number of times.&lt;/p&gt; &lt;h3&gt;Decision and process integration&lt;/h3&gt; &lt;p&gt;Kogito allows you to model a decision-driven service as either a self-contained decision service or an intelligent workflow with decision tasks. Whether you implement business decisions using Drools rules, DMN, or decision tables in a spreadsheet, Kogito will automatically generate REST endpoints for you.&lt;/p&gt; &lt;p&gt;In Kogito 0.8.0, we&amp;#8217;ve enhanced this feature to allow integration of DMN models with BPMN processes, so that &lt;a href="http://blog.athico.com/2020/03/kogito-ergo-rules-from-knowledge-to.html" target="_blank" rel="noopener noreferrer"&gt;business processes can be driven by intelligent decision nodes&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Join the Kogito community&lt;/h2&gt; &lt;p&gt;Kogito is an open source project backed by the &lt;a href="https://www.kiegroup.org/" target="_blank" rel="noopener noreferrer"&gt;KIE Group&lt;/a&gt;. The KIE Group also supports projects like jBPM, Drools, and OptaPlanner, which have been running at scale in different sectors for more than 10 years. You can be part of the Kogito community! Join the &lt;a href="https://groups.google.com/forum/?utm_medium=email&amp;#38;utm_source=footer#!forum/kogito-development" target="_blank" rel="noopener noreferrer"&gt;Kogito development group&lt;/a&gt; to ask questions and receive updates about Kogito&amp;#8217;s progress. We are also active on Twitter: &lt;a href="https://twitter.com/kogito_kie" target="_blank" rel="noopener noreferrer"&gt;@kogito_kie&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#038;title=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" data-a2a-url="https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/" data-a2a-title="Kogito 0.8.0 features online editors and cloud-native business automation"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/"&gt;Kogito 0.8.0 features online editors and cloud-native business automation&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BnFz5dlB_0Y" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Kogito is a cloud-native business automation solution that offers a powerful, developer-friendly experience. Based on production-tested open source projects Drools and jBPM, Kogito has business rules and processes down to a science. Kogito also aligns with popular lightweight runtimes such as Quarkus and Spring Boot to support developers building business-driven applications. This article is an [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/"&gt;Kogito 0.8.0 features online editors and cloud-native business automation&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">695697</post-id><dc:creator>Karina Varela</dc:creator><dc:date>2020-03-20T07:00:10Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/</feedburner:origLink></entry><entry><title>Testing memory-based horizontal pod autoscaling on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jeLX6NK1MkQ/" /><category term="Containers" /><category term="Kubernetes" /><category term="Performance" /><category term="autoscaling" /><category term="memory" /><category term="openshift" /><category term="tech preview" /><category term="testing" /><author><name>Mohammad Ahmad</name></author><id>https://developers.redhat.com/blog/?p=688567</id><updated>2020-03-19T07:00:13Z</updated><published>2020-03-19T07:00:13Z</published><content type="html">&lt;p&gt;&lt;a href="http://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&lt;/a&gt; offers horizontal pod autoscaling (HPA) primarily for CPUs, but it can also perform memory-based HPA, which is useful for applications that are more memory-intensive than CPU-intensive. In this article, I demonstrate how to use OpenShift&amp;#8217;s memory-based horizontal pod autoscaling feature (&lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/pod_autoscaling.html#pod-autoscaling-memory" target="_blank" rel="noopener noreferrer"&gt;tech preview&lt;/a&gt;) to autoscale your pods if the demands on memory increase. The test performed in this article might not necessarily reflect a real application. The tests only aim to demonstrate memory-based HPA in the simplest way possible.&lt;/p&gt; &lt;p&gt;&lt;span id="more-688567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;I use a simple PHP application (&lt;code&gt;index.php&lt;/code&gt;) that creates a large array in memory every time a request is made. The code looks like this:&lt;/p&gt; &lt;pre&gt;&amp;#60;?php $arr = array(); $arr_size = 100000; for ($i=1;$i&amp;#60;=$arr_size;$i++) { $arr[] = $i; } echo "created an array of $arr_size entries"; ?&amp;#62; &lt;/pre&gt; &lt;p&gt;You can perform this test with any language. The load test works by creating multiple parallel curl requests to the application. I chose PHP for its personal convenience.&lt;/p&gt; &lt;h2&gt;Check if &lt;code&gt;v2beta1&lt;/code&gt; is enabled&lt;/h2&gt; &lt;p&gt;Check if &lt;code&gt;v2beta1&lt;/code&gt; is enabled in your cluster:&lt;/p&gt; &lt;pre&gt;# oc get --raw /apis/autoscaling/v2beta1 {"kind":"APIResourceList","apiVersion":"v1","groupVersion":"autoscaling/v2beta1","resources":[{"name":"horizontalpodautoscalers","singularName":"","namespaced":true,"kind":"HorizontalPodAutoscaler","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["hpa"],"categories":["all"]},{"name":"horizontalpodautoscalers/status","singularName":"","namespaced":true,"kind":"HorizontalPodAutoscaler","verbs":["get","patch","update"]}]} &lt;/pre&gt; &lt;p&gt;If it isnâ€™t enabled, follow the documentation for enabling it on your respective OpenShift version.&lt;/p&gt; &lt;h2&gt;Set up your testbed&lt;/h2&gt; &lt;p&gt;Before you can test, you need to set up the environment you&amp;#8217;re testing in and the application you&amp;#8217;re testing.&lt;/p&gt; &lt;h3&gt;Set up your environment&lt;/h3&gt; &lt;p&gt;To set up your new environment:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a new project:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc new-project memhpa Now using project "memhpa" on server "https://console.ocp.mylab:8443". &lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Create an image stream (this assumes that you have your authentication set up correctly):&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc import-image myphp --insecure --from=registry.redhat.io/openshift3/php-55-rhel7:latest --confirm imagestream.image.openshift.io/myphp imported &lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Apply limits to the namespaces before creating your first application:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# cat limits.yml apiVersion: "v1" kind: "LimitRange" metadata: name: "myphp-resource-limits" spec: limits: - type: "Pod" max: cpu: "2" memory: "120Mi" min: cpu: "200m" memory: "6Mi" - type: "Container" max: cpu: "2" memory: "120Mi" min: cpu: "100m" memory: "4Mi" default: cpu: "300m" memory: "100Mi" defaultRequest: cpu: "200m" memory: "100Mi" maxLimitRequestRatio: cpu: "10" # oc create -f limits.yml limitrange/myphp-resource-limits created&lt;/pre&gt; &lt;h3&gt;Set up the application&lt;/h3&gt; &lt;p&gt;To set up your application:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create the application:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc new-app --name app1 myphp:latest~https://gitlab.mylab/myproject/phpapp.git --build-env "GIT_SSL_NO_VERIFY=true" &lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Wait until your application is built and running:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc get pods NAME READY STATUS RESTARTS AGE app1-1-build 0/1 Completed 0 2m app1-1-plchw 1/1 Running 0 27s &lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Create a route:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc expose svc app1 route/app1-memhpa.apps.ocp.mylab created &lt;/pre&gt; &lt;h2&gt;Test your application&lt;/h2&gt; &lt;p&gt;Now, to test your application:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Test the application:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# curl http://app1-memhpa.apps.ocp.mylab/ created an array of 100000 &lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;If your application fails, try reducing the size of the PHP array.&lt;/p&gt; &lt;ol start="2"&gt; &lt;li&gt;Create a memory-based HPA definition:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# cat hpa.yml apiVersion: autoscaling/v2beta1 kind: HorizontalPodAutoscaler metadata: name: hpa-resource-metrics-memory spec: scaleTargetRef: apiVersion: apps.openshift.io/v1 kind: DeploymentConfig name: app1 minReplicas: 1 maxReplicas: 10 metrics: - type: Resource resource: name: memory targetAverageUtilization: 90 # oc create -f hpa.yml horizontalpodautoscaler.autoscaling/hpa-resource-metrics-memory created # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 &lt;span style="font-weight: 400;"&gt;&amp;#60;unknown&amp;#62;&lt;/span&gt;/90% 1 10 0 31m &lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Wait until the &lt;code&gt;&amp;#60;unknown&amp;#62;&lt;/code&gt; value shown above changes to an integer:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 75%/90% 1 10 1 33m &lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Create a load. I use a simple script that loops through a &lt;code&gt;curl&lt;/code&gt; command:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# cat loadphp.sh #!/bin/bash while true; do curl http://app1-memhpa.apps.ocp.mylab/; done done &lt;/pre&gt; &lt;ol start="5"&gt; &lt;li&gt;Run the following command a few times until you notice the load increasing:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# nohup ./loadphp.sh &amp;#38;&lt;/pre&gt; &lt;h2&gt;Observe the HPA&lt;/h2&gt; &lt;p&gt;You will start to notice an increase in memory utilization and corresponding autoscaling:&lt;/p&gt; &lt;pre&gt;# oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 75%/90% 1 10 1 33m # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 94%/90% 1 10 2 39m # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 90%/90% 1 10 2 48m # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 85%/90% 1 10 3 52m &lt;/pre&gt; &lt;p&gt;Next, stop the load, and then watch the HPA. Several minutes after the load stops, the autoscaler eventually downscales the pods to one:&lt;/p&gt; &lt;pre&gt;NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 29%/90% 1 10 1 1h &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, my aim was to provide the simplest of methods to set up and test memory-based horizontal pod autoscaling. I was able to demonstrate this process with a single PHP web page that creates a large array in memory, built using a basic Red Hat S2I PHP image, and set up in a namespace with limits and an HPA.&lt;/p&gt; &lt;p&gt;Once I set up the environment, I created a basic bash script to put a load on the application in order to observe an increasing load in memory, until the result is multiple autoscaled pods. After stopping the load, in a few minutes, the autoscaler reduced the pods down to one.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://developers.redhat.com/blog/author/dhatchett/" target="_blank" rel="noopener noreferrer"&gt;Damon Hatchett&lt;/a&gt; for peer-reviewing this article.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#038;title=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/" data-a2a-title="Testing memory-based horizontal pod autoscaling on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/"&gt;Testing memory-based horizontal pod autoscaling on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jeLX6NK1MkQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat OpenShift offers horizontal pod autoscaling (HPA) primarily for CPUs, but it can also perform memory-based HPA, which is useful for applications that are more memory-intensive than CPU-intensive. In this article, I demonstrate how to use OpenShift&amp;#8217;s memory-based horizontal pod autoscaling feature (tech preview) to autoscale your pods if the demands on memory increase. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/"&gt;Testing memory-based horizontal pod autoscaling on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">688567</post-id><dc:creator>Mohammad Ahmad</dc:creator><dc:date>2020-03-19T07:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/</feedburner:origLink></entry><entry><title>Cross-language link-time optimization using Red Hat Developer Tools</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/drANtdhCIfQ/" /><category term="clang/LLVM" /><category term="Developer Tools" /><category term="Rust" /><category term="cross-language LTO" /><category term="RHEL" /><category term="rust language" /><category term="toolset" /><author><name>Josh Stone</name></author><id>https://developers.redhat.com/blog/?p=688387</id><updated>2020-03-18T07:00:14Z</updated><published>2020-03-18T07:00:14Z</published><content type="html">&lt;p&gt;Several months ago, the LLVM project blog published an article, &lt;em&gt;&lt;a href="http://blog.llvm.org/2019/09/closing-gap-cross-language-lto-between.html" target="_blank" rel="noopener noreferrer"&gt;Closing the gap: cross-language LTO between Rust and C/C++&lt;/a&gt;&lt;/em&gt;. In it, they explained that link-time optimization can improve performance by optimizing throughout the whole program, such as inlining function calls between different objects. Since Rust and Clang both use LLVM for code generation, we can even achieve this benefit across different programming languages.&lt;/p&gt; &lt;p&gt;In &lt;a href="https://developers.redhat.com/topics/developer-tools/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Developer Tools&lt;/a&gt;, we have the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_tools/1/" target="_blank" rel="noopener noreferrer"&gt;Rust and LLVM Toolsets&lt;/a&gt;, which can easily be used together for cross-language link-time optimization (LTO), so let&amp;#8217;s try it out.&lt;/p&gt; &lt;p&gt;&lt;span id="more-688387"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Setup&lt;/h2&gt; &lt;p&gt;One of the caveats mentioned in the LLVM blog is &lt;a href="https://doc.rust-lang.org/rustc/linker-plugin-lto.html#toolchain-compatibility" target="_blank" rel="noopener noreferrer"&gt;toolchain compatibility&lt;/a&gt;, because cross-language LTO needs a close match between the LLVM libraries used by &lt;code&gt;rustc&lt;/code&gt; and &lt;code&gt;clang&lt;/code&gt;. The upstream Rust builds use a private copy of LLVM, which is sometimes even a snapshot rather than a final release, so it can be challenging to get a corresponding build of &lt;code&gt;clang&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Red Hat&amp;#8217;s Rust Toolset uses the shared LLVM library from the same LLVM Toolset we get Clang from, so we always know these compilers are using the same code generation backend, yielding compatible bytecode for LTO.&lt;/p&gt; &lt;p&gt;On Red Hat Enterprise Linux 8 (RHEL 8), both toolsets are available in the default AppStream repository. We can install their default module profiles to get complete toolchains for Rust and Clang:&lt;/p&gt; &lt;pre&gt;# yum module install rust-toolset llvm-toolset&lt;/pre&gt; &lt;p&gt;On Red Hat Enterprise Linux 7, the toolsets are available as software collections. After &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_tools/1/html/using_rust_1.39_toolset/chap-rust-intro#sect-Rust-access" target="_blank" rel="noopener noreferrer"&gt;getting access&lt;/a&gt; to the &lt;code&gt;devtools&lt;/code&gt; repository, we can install the current version of each toolset:&lt;/p&gt; &lt;pre&gt;# yum install rust-toolset-1.39 llvm-toolset-8.0&lt;/pre&gt; &lt;p&gt;Then, we can add them to our working &lt;code&gt;PATH&lt;/code&gt; by starting a new shell with Rust enabled, which implicitly enables LLVM as a dependency:&lt;/p&gt; &lt;pre&gt;$ scl enable rust-toolset-1.39 bash&lt;/pre&gt; &lt;h2&gt;Example: Inlined summation&lt;/h2&gt; &lt;p&gt;Rust documents a &lt;a href="https://doc.rust-lang.org/rustc/linker-plugin-lto.html" target="_blank" rel="noopener noreferrer"&gt;special option for LTO&lt;/a&gt;, &lt;code&gt;-C linker-plugin-lto&lt;/code&gt;, with example commands for C calling Rust and vice versa. Let&amp;#8217;s apply this option to a simple example summing from one to n. This example has a closed form &lt;code&gt;n(n+1)/2&lt;/code&gt; that most optimizers know, and with constant inputs, it may also compile to a constant.&lt;/p&gt; &lt;p&gt;First, there is our C code in &lt;code&gt;main.c&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;#include &amp;#60;stdio.h&amp;#62; int sum(int, int); int main() { printf("sum(%d, %d) = %d\n", 1, 100, sum(1, 100)); return 0; }&lt;/pre&gt; &lt;p&gt;Then, we have our Rust code in &lt;code&gt;sum.rs&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;#[no_mangle] pub extern "C" fn sum(start: i32, end: i32) -&amp;#62; i32 { (start..=end).sum() }&lt;/pre&gt; &lt;p&gt;If we compile this combination without LTO:&lt;/p&gt; &lt;pre&gt;$ rustc --crate-type=staticlib -Copt-level=2 sum.rs $ clang -c -O2 main.c $ clang ./main.o ./libsum.a -o main $ ./main sum(1, 100) = 5050 &lt;/pre&gt; &lt;p&gt;We can see in the disassembly (&lt;code&gt;objdump -d main&lt;/code&gt;) that &lt;code&gt;main&lt;/code&gt; makes a normal function call to &lt;code&gt;sum&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;00000000004005d0 &amp;#60;main&amp;#62;: 4005d0: 50 push %rax 4005d1: bf 01 00 00 00 mov $0x1,%edi 4005d6: be 64 00 00 00 mov $0x64,%esi 4005db: e8 20 00 00 00 callq 400600 &amp;#60;sum&amp;#62; 4005e0: bf e8 06 40 00 mov $0x4006e8,%edi 4005e5: be 01 00 00 00 mov $0x1,%esi 4005ea: ba 64 00 00 00 mov $0x64,%edx 4005ef: 89 c1 mov %eax,%ecx 4005f1: 31 c0 xor %eax,%eax 4005f3: e8 d8 fe ff ff callq 4004d0 &amp;#60;printf@plt&amp;#62; 4005f8: 31 c0 xor %eax,%eax 4005fa: 59 pop %rcx 4005fb: c3 retq 4005fc: 0f 1f 40 00 nopl 0x0(%rax) 0000000000400600 &amp;#60;sum&amp;#62;: ...&lt;/pre&gt; &lt;p&gt;Now, let&amp;#8217;s try it with cross-language LTO:&lt;/p&gt; &lt;pre&gt;$ rustc --crate-type=staticlib -Clinker-plugin-lto -Copt-level=2 sum.rs $ clang -c -flto=thin -O2 main.c $ clang -flto=thin -fuse-ld=lld -O2 ./main.o ./libsum.a -pthread -ldl -o main $ ./main sum(1, 100) = 5050&lt;/pre&gt; &lt;p&gt;This time in the disassembly, we can see that the call is gone, replaced with a simple constant &lt;code&gt;0x13ba&lt;/code&gt;, which is 5050:&lt;/p&gt; &lt;pre&gt;00000000002a6250 &amp;#60;main&amp;#62;: 2a6250: 50 push %rax 2a6251: bf b4 66 20 00 mov $0x2066b4,%edi 2a6256: be 01 00 00 00 mov $0x1,%esi 2a625b: ba 64 00 00 00 mov $0x64,%edx 2a6260: b9 ba 13 00 00 mov $0x13ba,%ecx 2a6265: 31 c0 xor %eax,%eax 2a6267: e8 04 03 00 00 callq 2a6570 &amp;#60;printf@plt&amp;#62; 2a626c: 31 c0 xor %eax,%eax 2a626e: 59 pop %rcx 2a626f: c3 retq&lt;/pre&gt; &lt;p&gt;This example isn&amp;#8217;t big enough for us to show any measurable performance difference, but I hope it&amp;#8217;s clear that there are real opportunities for greater optimization in larger programsâ€”even across such different languages.&lt;/p&gt; &lt;h2&gt;Example: Firefox&lt;/h2&gt; &lt;p&gt;As mentioned in the LLVM blog post, Firefox was a major motivating case for cross-language LTO as a project mostly written in C++, but increasingly using Rust as well. Both languages can make FFI calls to the other, but there&amp;#8217;s overhead to those calls if they can never be inlined, even in trivial cases.&lt;/p&gt; &lt;p&gt;I&amp;#8217;m no expert on testing browser performance, but I was able to try a few builds of Firefox 73.0 using the Rust and LLVM Toolsets on Red Hat Enterprise Linux 8. Here&amp;#8217;s my &lt;code&gt;mozconfig&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;export CC=clang export CXX=clang++ export AR=llvm-ar export NM=llvm-nm export RANLIB=llvm-ranlib ac_add_options --disable-elf-hack ac_add_options --enable-release ac_add_options --enable-linker=lld&lt;/pre&gt; &lt;p&gt;I then compared builds by adding &lt;code&gt;--enable-lto=thin&lt;/code&gt; and &lt;code&gt;--enable-lto=cross&lt;/code&gt; (also implies &amp;#8220;thin&amp;#8221;). The bulk of the code is built into &lt;code&gt;libxul.so&lt;/code&gt;, and here&amp;#8217;s a rough comparison of that resulting binary:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;LTO&lt;/th&gt; &lt;th&gt;&lt;code&gt;.text&lt;/code&gt; size&lt;/th&gt; &lt;th&gt;&lt;code&gt;.data&lt;/code&gt; size&lt;/th&gt; &lt;th&gt;&lt;code&gt;nm&lt;/code&gt; symbols&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;#8211;&lt;/td&gt; &lt;td&gt;117,770,174&lt;/td&gt; &lt;td&gt;4,259,609&lt;/td&gt; &lt;td&gt;303,677&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;thin&lt;/td&gt; &lt;td&gt;115,602,351&lt;/td&gt; &lt;td&gt;4,249,968&lt;/td&gt; &lt;td&gt;268,377&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;cross&lt;/td&gt; &lt;td&gt;115,627,483&lt;/td&gt; &lt;td&gt;4,232,929&lt;/td&gt; &lt;td&gt;267,925&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;By these metrics, the bulk of the benefit comes from just enabling thin LTO at all, and in the cross build the code size got &lt;em&gt;slightly&lt;/em&gt; larger. Still, the symbol count did drop a little further in the cross build, which indicates in a crude way that there was probably more inlining, at least.&lt;/p&gt; &lt;p&gt;What does that result actually achieve for performance? I&amp;#8217;ll leave that to Firefox developers to measure themselves.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Link-time optimization is a great way to squeeze more performance into a large build, but if you&amp;#8217;re using multiple programming languages, the calls between them might have been a barrier. Now, the combination of Clang, Rust, and their common LLVM backend make cross-language LTO possible, and we can see some real benefits!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#038;title=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" data-a2a-url="https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/" data-a2a-title="Cross-language link-time optimization using Red Hat Developer Tools"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/"&gt;Cross-language link-time optimization using Red Hat Developer Tools&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/drANtdhCIfQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Several months ago, the LLVM project blog published an article, Closing the gap: cross-language LTO between Rust and C/C++. In it, they explained that link-time optimization can improve performance by optimizing throughout the whole program, such as inlining function calls between different objects. Since Rust and Clang both use LLVM for code generation, we can [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/"&gt;Cross-language link-time optimization using Red Hat Developer Tools&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">688387</post-id><dc:creator>Josh Stone</dc:creator><dc:date>2020-03-18T07:00:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/</feedburner:origLink></entry><entry><title>How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vTomIOJ8a40/" /><category term="Event-Driven" /><category term="Java" /><category term="Stream Processing" /><category term="Apache Kafka" /><category term="MicroProfile" /><category term="MicroProfile Config" /><category term="Open Liberty" /><category term="Rest client" /><author><name>Tom Jennings</name></author><id>https://developers.redhat.com/blog/?p=695027</id><updated>2020-03-17T07:00:18Z</updated><published>2020-03-17T07:00:18Z</published><content type="html">&lt;p&gt;In Open Liberty 20.0.0.3, you can now access &lt;a href="#kafka"&gt;Kafka-specific properties&lt;/a&gt; such as the message key and message headers, rather than just the message payload, as was the case with the basic MicroProfile Reactive Messaging &lt;code&gt;Message&lt;/code&gt; API. Also, you can now &lt;a href="#ASCA"&gt;set the &lt;code&gt;SameSite&lt;/code&gt; attribute in the session cookie&lt;/a&gt;, the LTPA, and &lt;a href="https://developers.redhat.com/cheatsheets/microprofile-jwt/" target="_blank" rel="noopener noreferrer"&gt;JWT&lt;/a&gt; cookies as well as in application-defined cookies.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; View the list of &lt;a href="https://github.com/OpenLiberty/open-liberty/issues?utf8=%E2%9C%93&amp;#38;q=label%3Arelease%3A20003+label%3A%22release+bug%22" target="_blank" rel="noopener noreferrer"&gt;fixed bugs in Open Liberty 20.0.0.3 here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you&amp;#8217;re interested in what&amp;#8217;s coming soon in Open Liberty, take a look at our &lt;a href="#previews"&gt;current development builds&lt;/a&gt;. These include updated features to MicroProfile (&lt;a href="https://developers.redhat.com/cheatsheets/microprofile-rest-client/" target="_blank" rel="noopener noreferrer"&gt;Rest Client&lt;/a&gt;, Metrics, Health, Fault Tolerance, and Config), as well as GraphQL with Open Liberty, automatically compressing HTTP responses, and persistent EJB timers.&lt;/p&gt; &lt;h2 id="run"&gt;Run your apps using 20.0.0.3&lt;/h2&gt; &lt;p&gt;If you&amp;#8217;re using &lt;a href="https://openliberty.io//guides/maven-intro.html" target="_blank" rel="noopener noreferrer"&gt;Maven&lt;/a&gt;, here are the coordinates:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.openliberty&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;openliberty-runtime&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;20.0.0.3&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;zip&amp;#60;/type&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;p&gt;Or, for &lt;a href="https://openliberty.io//guides/gradle-intro.html" target="_blank" rel="noopener noreferrer"&gt;Gradle&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;dependencies { libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '[20.0.0.3,)' }&lt;/pre&gt; &lt;p&gt;Or, if you&amp;#8217;re using Docker:&lt;/p&gt; &lt;pre&gt;FROM open-liberty&lt;/pre&gt; &lt;p&gt;Or, take a look at our &lt;a href="https://openliberty.io//downloads/" target="_blank" rel="noopener noreferrer"&gt;downloads page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/tags/open-liberty"&gt;&lt;img src="img/blog/blog_btn_stack.svg" alt="Ask a question on Stack Overflow" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2 id="kafka"&gt;Kafka-specific properties&lt;/h2&gt; &lt;p&gt;New to Open Liberty is Kafka-specific properties. The basic MicroProfile Reactive Messaging &lt;code&gt;Message&lt;/code&gt; API does not let the user access anything other than the message payload. The native Kafka client API allows users to access Kafka-specific message properties, such as the message key and message headers.&lt;/p&gt; &lt;h3 id="_incoming_messages"&gt;Incoming messages&lt;/h3&gt; &lt;p&gt;For incoming messages, we have now allowed the user to unwrap a &lt;code&gt;Message&lt;/code&gt; to gain access to the underlying &lt;code&gt;ConsumerRecord&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#62;@Incoming("channel1") public CompletionStage consume(Message message) { ConsumerRecord&amp;#60;String, String&amp;#62; cr = (ConsumerRecord&amp;#60;String, String&amp;#62;) message.unwrap(ConsumerRecord.class); String key = consumerRecord.key(); String value = consumerRecord.value(); String topic = consumerRecord.topic(); int partition = consumerRecord.partition(); long timestamp = consumerRecord.timestamp(); Headers headers = consumerRecord.headers(); // some more code.... return CompletableFuture.completedFuture(null); }&lt;/pre&gt; &lt;h3 id="_outgoing_messages"&gt;Outgoing messages&lt;/h3&gt; &lt;p&gt;For outgoing messages, if the payload is a &lt;code&gt;ProducerRecord&lt;/code&gt;, then the properties within it are passed on to Kafka:&lt;/p&gt; &lt;pre&gt;&amp;#62;@Outgoing("channel2") public Message publish() throws UnsupportedEncodingException { ProducerRecord&amp;#60;String, String&amp;#62; producerRecord = new ProducerRecord&amp;#60;String, String&amp;#62;("myTopic", null, "myKey", "myValue"); producerRecord.headers().add("HeaderKey", "HeaderValue".getBytes("UTF-8")); return Message.of(producerRecord); }&lt;/pre&gt; &lt;p&gt;The example above assumes that no topic was explicitly pre-configured in the MicroProfile Config for the channel. If the topic is pre-configured, then that will take precedence and the topic in the &lt;code&gt;ProducerRecord&lt;/code&gt; will be ignored.&lt;/p&gt; &lt;h3 id="_example_using_a_pre_configured_topic"&gt;Example using a pre-configured topic&lt;/h3&gt; &lt;p&gt;In this example, the topic is pre-configured using MicroProfile Config to be &lt;code&gt;myOtherTopic&lt;/code&gt;, so the topic set in the &lt;code&gt;ProducerRecord&lt;/code&gt; is ignored. Here are the MicroProfile Config properties:&lt;/p&gt; &lt;pre&gt;&amp;#62;mp.reactive.messaging.channel3.connector=liberty-kafka mp.reactive.messaging.channel3.topic=myOtherTopic #Overrides value in code&lt;/pre&gt; &lt;p&gt;Here is the reactive messaging bean:&lt;/p&gt; &lt;pre&gt;&amp;#62;@Outgoing("channel3") public Message&amp;#60;ProducerRecord&amp;#60;K, V&amp;#62;&amp;#62; publish() { ProducerRecord pr = new ProducerRecord("myTopic", "myValue"); return Message.of(pr); }/pre&amp;#62;&lt;/pre&gt; &lt;h2 id="ASCA"&gt;Adding the &lt;code&gt;SameSite&lt;/code&gt; cookie attribute&lt;/h2&gt; &lt;p&gt;Open Liberty now offers the ability to set the &lt;code&gt;SameSite&lt;/code&gt; attribute on the session cookie, the LTPA, and the JWT cookies as well as on the application-defined cookies. Implement the &lt;code&gt;SameSite&lt;/code&gt; attribute by adding one or more &lt;code&gt;server.xml&lt;/code&gt; configuration options. The servlet &lt;code&gt;javax.servlet.http.Cookie&lt;/code&gt; API does not offer the ability to set the &lt;code&gt;SameSite&lt;/code&gt; attribute on a cookie.&lt;/p&gt; &lt;p&gt;If the &lt;code&gt;SameSite&lt;/code&gt; attribute is needed, the options for setting it are currently limited to using the &lt;code&gt;HttpServletResponse.addHeader&lt;/code&gt; and &lt;code&gt;HttpServletResponse.setHeader&lt;/code&gt;, and constructing the &lt;code&gt;Set-Cookie&lt;/code&gt; header. The &lt;code&gt;SameSite&lt;/code&gt; attribute is used by browsers to determine if a particular cookie should be sent with a request. There are three values for the &lt;code&gt;SameSite&lt;/code&gt; attribute: &lt;code&gt;Lax&lt;/code&gt;, &lt;code&gt;Strict&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;, as shown in Table 1.&lt;/p&gt; &lt;table&gt; &lt;caption&gt;Table 1: Values for the &lt;code&gt;SameSite&lt;/code&gt; attribute.&lt;/caption&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;Value&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;SameSite=Strict&lt;/code&gt;&lt;/td&gt; &lt;td&gt;The cookie will only be sent along with same-site requests. The cookie is only sent by the browser if the site for the cookie matches the site in the address bar, for example.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;SameSite=Lax&lt;/code&gt;&lt;/td&gt; &lt;td&gt;The cookie will be sent with same-site requests and with cross-site top-level navigations. Clicking a link, for example.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;SameSite=None&lt;/code&gt;&lt;/td&gt; &lt;td&gt;The cookie will be sent with same-site and cross-site requests. The cookie is sent by the browser for third party contexts and embedded content, for example.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;To use the &lt;code&gt;SameSite&lt;/code&gt; cookie attribute:&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol&gt; &lt;li&gt;Set the session cookie &lt;code&gt;SameSite&lt;/code&gt; attribute using the following &lt;code&gt;server.xml&lt;/code&gt; configuration:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 80px;"&gt;&lt;code&gt;&amp;#60;httpSession cookieSameSite="Disabled|Strict|Lax|None"/&amp;#62;&lt;/code&gt;&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;The default value is &lt;code&gt;Disabled&lt;/code&gt;. This means that no &lt;code&gt;SameSite&lt;/code&gt; attribute will be added.&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol start="2"&gt; &lt;li&gt;Set the &lt;code&gt;LTPA/JWT&lt;/code&gt; cookie &lt;code&gt;SameSite&lt;/code&gt; attribute using the following &lt;code&gt;server.xml&lt;/code&gt; configuration:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 80px;"&gt;&lt;code&gt;&amp;#60;webAppSecurity sameSiteCookie="Disabled|Strict|Lax|None"/&amp;#62;&lt;/code&gt;&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;The default value is &lt;code&gt;Disabled&lt;/code&gt;. This means that no &lt;code&gt;SameSite&lt;/code&gt; attribute will be added.&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol start="3"&gt; &lt;li&gt;Set the &lt;code&gt;SameSite&lt;/code&gt; attribute on cookies via the following &lt;code&gt;server.xml&lt;/code&gt; configuration:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 80px;"&gt;&amp;#60;httpEndpoint id="defaultHttpEndpoint" httpPort="9080" httpsPort="9443" &amp;#62; &amp;#60;samesite lax="cookieOne" strict="cookieTwo" none="cookieThree"/&amp;#62; &amp;#60;/httpEndpoint&amp;#62;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;&amp;#60;httpEndpoint/&amp;#62;&lt;/code&gt; &lt;code&gt;SameSite&lt;/code&gt; configuration allows the use of wildcards in the following ways:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A standalone wildcard ( * ). All cookies would have the &lt;code&gt;SameSite=Lax&lt;/code&gt; attribute, which includes the session and LTPA/JWT cookies unless the &lt;code&gt;&amp;#60;httpSession/&amp;#62;&lt;/code&gt; and/or &lt;code&gt;&amp;#60;webAppSecurity/&amp;#62;&lt;/code&gt; configuration has also been set. For example:&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt; &amp;#60;httpEndpoint id="defaultHttpEndpoint" httpPort="9080" httpsPort="9443" &amp;#62; &amp;#60;samesite lax="*" /&amp;#62; &amp;#60;/httpEndpoint&amp;#62; &lt;/pre&gt; &lt;ul&gt; &lt;li&gt;At the end of one or more cookie names. The following snippet would map the following cookie names to &lt;code&gt;SameSite&lt;/code&gt; attributes: &lt;ul&gt; &lt;li&gt;&lt;code&gt;cookieOne&lt;/code&gt; â†’ &lt;code&gt;SameSite=Lax&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cookieTwo&lt;/code&gt; â†’ &lt;code&gt;SameSite=Strict&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cookieThree&lt;/code&gt; â†’ &lt;code&gt;SameSite=None&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;pre style="padding-left: 40px;"&gt; &amp;#60;httpEndpoint id="defaultHttpEndpoint" httpPort="9080" httpsPort="9443" &amp;#62; &amp;#60;samesite lax="cookie*" strict="cookieTwo" none="cookieThree"/&amp;#62; &amp;#60;/httpEndpoint&amp;#62;&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;The &lt;code&gt;&amp;#60;httpSession/&amp;#62;&lt;/code&gt; and &lt;code&gt;&amp;#60;webAppSecurity/&amp;#62;&lt;/code&gt; configuration takes precedence over the &lt;code&gt;&amp;#60;httpEndpoint/&amp;#62;configuration&amp;#62;&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;When a cookie matches the &lt;code&gt;SameSite=None&lt;/code&gt; configuration, then the &lt;code&gt;Secure&lt;/code&gt; attribute will automatically be added to the cookie.&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;&amp;#60;httpEndpoint/&amp;#62;&lt;/code&gt; configuration can apply to any &lt;code&gt;Set-Cookie&lt;/code&gt; header.&lt;/p&gt; &lt;p&gt;Technical details regarding the &lt;code&gt;SameSite&lt;/code&gt; attribute can be found in the following RFC: &lt;a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7"&gt;Cookies: HTTP State Management Mechanism&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Try Open Liberty 20.0.0.3 in Red Hat Runtimes now&lt;/h2&gt; &lt;p&gt;Open Liberty is part of the Red Hat Runtimes offering. If you&amp;#8217;re a &lt;a href="https://access.redhat.com/products/red-hat-runtimes" target="_blank" rel="noopener noreferrer"&gt;Red Hat Runtimes subscriber&lt;/a&gt;, you can try Open Liberty now.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#038;title=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" data-a2a-url="https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/" data-a2a-title="How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/"&gt;How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vTomIOJ8a40" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In Open Liberty 20.0.0.3, you can now access Kafka-specific properties such as the message key and message headers, rather than just the message payload, as was the case with the basic MicroProfile Reactive Messaging Message API. Also, you can now set the SameSite attribute in the session cookie, the LTPA, and JWT cookies as well [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/"&gt;How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">695027</post-id><dc:creator>Tom Jennings</dc:creator><dc:date>2020-03-17T07:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/</feedburner:origLink></entry><entry><title>Integrating with SaaS Applications - Example 3rd-Party Platform Integration</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1jHJAX1nr4Q/integrating-saas-applications-example-third-party-platform-integration.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integrating_with_saas_applications_example_3rd_party_platform_integration</id><updated>2020-03-17T06:00:03Z</updated><published>2020-03-17T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-f1x1Wl8_YFU/Xm-M1cKi5PI/AAAAAAAAw-0/GI1Gxp8I8_4bRPmxKxEcwzAxC4OOn8XPACNcBGAsYHQ/s1600/element-10.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="integrating with SaaS applications" border="0" data-original-height="900" data-original-width="1600" height="180" src="https://1.bp.blogspot.com/-f1x1Wl8_YFU/Xm-M1cKi5PI/AAAAAAAAw-0/GI1Gxp8I8_4bRPmxKxEcwzAxC4OOn8XPACNcBGAsYHQ/s320/element-10.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 5 - Example 3rd-party platform integration&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;The previous article in this series looked at&amp;nbsp;&lt;a href="https://www.schabell.org/2020/03/integrating-saas-applications-example-crm-connector-integration.html" target="_blank"&gt;a SaaS CRM connector integration example.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The foundation for this logical diagram was researching a use case where customers were successful with a portfolio solution.&lt;br /&gt;&lt;br /&gt;It's a starting point for the generic architectural blueprint that rises from several customer solution that were researched.&lt;br /&gt;&lt;br /&gt;Having completed the outline of the blueprint details and the resulting logical diagram elements, it's now time to take a look as specific examples.&lt;br /&gt;&lt;br /&gt;In this article we'll continue building the previous examples by sharing how customers are integrating with 3rd-party platforms in their architectures as SaaS platforms.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Blueprint scenarios&lt;/h3&gt;As a reminder, the architectural details covered here are base on real customer integration solutions using open source technologies.&lt;br /&gt;&lt;br /&gt;The example scenario presented here is a generic common blueprint that was uncovered researching customer solutions. It's my intent to provide a blueprint that provides guidance and not deep technical details.&lt;br /&gt;&lt;br /&gt;This section covers the visual representations as presented. There are many ways to represent each element in this architectural blueprint, but I've chosen icons, text and colors that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or&amp;nbsp;&lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt;&amp;nbsp;with your feedback.&lt;br /&gt;&lt;br /&gt;Now let's take a look at the details in this blueprint and outline the solution.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Integrating with SaaS platforms&lt;/h3&gt;The example blueprint shown in figure titled&amp;nbsp;&lt;i&gt;Example: Third-Party Platform Integration&lt;/i&gt;&amp;nbsp;outlines how to integrate an existing 3rd-party platform as if it's a SaaS platform.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-QQ7D2JX1IBs/Xm-K9Wqgl1I/AAAAAAAAw-k/NlxqwIWTdb0c_cUKlWfbAL4qxh_ZzLdlgCNcBGAsYHQ/s1600/Screenshot%2B2020-03-16%2Bat%2B15.18.59.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="integrating with 3rd-party platforms" border="0" data-original-height="885" data-original-width="1600" height="176" src="https://1.bp.blogspot.com/-QQ7D2JX1IBs/Xm-K9Wqgl1I/AAAAAAAAw-k/NlxqwIWTdb0c_cUKlWfbAL4qxh_ZzLdlgCNcBGAsYHQ/s320/Screenshot%2B2020-03-16%2Bat%2B15.18.59.png" title="" width="320" /&gt;&lt;/a&gt;As is often the case, organizational choices in our past have left us with legacy components in our architectures. While sometimes these are simple components to integrate with, we live and learn by applying the same abstractions to our larger platforms that might be hosting a collection of functionality in our organization.&lt;br /&gt;&lt;br /&gt;For example, let's assume this image above is making use of a legacy platform hosting a myriad of specialized services that have become impossible to maintain. The amount of interfaces and maintenance has become such a burden that the organization desires to migrate away from the legacy platform, yet cannot at this time due to their dependency on those hosted services.&lt;br /&gt;&lt;br /&gt;A logical approach is to segregate the platform as if it's a cloud or SaaS service. This allows for gradual migration of the existing services from the 3rd-party platform at your convenience, including evenutal moves to offsite or cloud-based service hosting. SaaS integration with these services or applications provides many options going forward in managing the architecture.&lt;br /&gt;&lt;br /&gt;The blueprint here shows a specific part of the integration, where a front end web connection uses front-end microservices to access integration microservices that manage that generice access to the third-party platform. Note, the security aspects are left in this example to ensure that you remember to include authentication and authorization across your integration landscape.&lt;br /&gt;&lt;br /&gt;Implementation details are left up to the reader to quantify as each organizations needs and usage of a specific SaaS integrations with all possible third-party platforms can not be captured in a generic architectural blueprint beyond the above.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;An overview of the series on integrating SaaS applications portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/01/integrating-saas-applications-an-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/02/integrating-saas-applications-common-architectural-elements.html" target="_blank"&gt;Common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/02/integrating-saas-applications-example-crm-integration.html" target="_blank"&gt;Example CRM integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/03/integrating-saas-applications-example-crm-connector-integration.html" target="_blank"&gt;Example CRM connector integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/03/integrating-saas-applications-example-third-party-platform-integration.html" target="_blank"&gt;Example 3rd-party platform integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Example processes with 3rd-party platform integration&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at process integration with 3rd-party SaaS or SaaS-like platforms.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/u89AlwMWFZE" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1jHJAX1nr4Q" height="1" width="1" alt=""/&gt;</content><summary>Part 5 - Example 3rd-party platform integration The previous article in this series looked atÂ a SaaS CRM connector integration example. The foundation for this logical diagram was researching a use case where customers were successful with a portfolio solution. It's a starting point for the generic architectural blueprint that rises from several customer solution that were researched. Having compl...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-03-17T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/u89AlwMWFZE/integrating-saas-applications-example-third-party-platform-integration.html</feedburner:origLink></entry><entry><title>JBoss Tools and Red Hat CodeReady Studio for Eclipse 2019-12</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7YmPI72ipYY/12.14.0.ga.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><category term="codereadystudio" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/12.14.0.ga.html</id><updated>2020-03-19T13:04:43Z</updated><published>2020-03-17T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2019-12/4.14.0.Final.html"&gt;JBoss Tools 4.14.0&lt;/a&gt; and &lt;a href="https://tools.jboss.org/downloads/devstudio/2019-12/12.14.0.GA.html"&gt;Red Hat CodeReady Studio 12.14&lt;/a&gt; for Eclipse 2019-12 are here waiting for you. Check it out!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/blog/images/crstudio12.png" alt="crstudio12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="installation"&gt;&lt;a class="anchor" href="#installation"&gt;&lt;/a&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview/"&gt;Red Hat CodeReady product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.14 (2019-12) but we recommend using the latest &lt;a href="https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-enterprise-java-developers"&gt;Eclipse 4.14 2019-12 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;quot;JBoss Tools&amp;quot; or &amp;quot;Red Hat CodeReady Studio&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our main focus for this release was a new tooling for the Quarkus framework, improvements for container based development and bug fixing. Eclipse 2019-12 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2019-12 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="openshift-container-platform-4-3-support"&gt;&lt;a class="anchor" href="#openshift-container-platform-4-3-support"&gt;&lt;/a&gt;OpenShift Container Platform 4.3 support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the new OpenShift Container Platform (OCP) 4.3 now available (see this &lt;a href="https://blog.openshift.com/introducing-red-hat-openshift-4-3-to-enhance-kubernetes-security/" target="_blank"&gt;article&lt;/a&gt;), JBoss Tools is compatible with this major release in a transparent way. Just define your connection to your OCP 4.3 based cluster as you did before for an OCP 3 cluster, and use the tooling !&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="new-openshift-application-explorer-view"&gt;&lt;a class="anchor" href="#new-openshift-application-explorer-view"&gt;&lt;/a&gt;New OpenShift Application Explorer view&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new OpenShift Application Explorer window has been added in addition to the OpenShift Explorer. It is based on &lt;a href="https://github.com/openshift/odo/" target="_blank"&gt;OpenShift Do&lt;/a&gt;. It provides a different and simplified user experience allowing easy and rapid feedback through inner loop and debugging.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Letâ€™s see it in action.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="opening-the-openshift-application-explorer-view"&gt;&lt;a class="anchor" href="#opening-the-openshift-application-explorer-view"&gt;&lt;/a&gt;Opening the OpenShift Application Explorer view&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you opened a brand new workspace, you should see the OpenShift Application Explorer view in the list of views available on the botton part of the screen:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer.png" alt="application explorer" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you donâ€™t see the view being listed, you can open it through the &lt;code&gt;&lt;code&gt;Window -â†’ Show View -â†’ Other&lt;/code&gt;&lt;/code&gt; menu, enter &lt;code&gt;&lt;code&gt;open&lt;/code&gt;&lt;/code&gt; in the filter text box and then select &lt;code&gt;&lt;code&gt;OpenShift Application Explorer&lt;/code&gt;&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer1.png" alt="application explorer1" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer2.png" alt="application explorer2" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Expanding the root node will display the list of projects available on the cluster:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer3.png" alt="application explorer3" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-based-micro-service"&gt;&lt;a class="anchor" href="#java-based-micro-service"&gt;&lt;/a&gt;Java based micro service&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will show how to deploy a Java based microservice and how to use the various features. But we first need to load the component source code in our workspace. Thanks to the launcher wizard, we can do that easilly. Try &lt;code&gt;&lt;code&gt;Ctrl+N&lt;/code&gt;&lt;/code&gt; and select the &lt;code&gt;&lt;code&gt;Launcher project&lt;/code&gt;&lt;/code&gt; wizard:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer4.png" alt="application explorer4" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select &lt;code&gt;&lt;code&gt;rest-http&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Mission&lt;/code&gt;&lt;/code&gt; field, &lt;code&gt;&lt;code&gt;vert.x community&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Runtime&lt;/code&gt;&lt;/code&gt; field, &lt;code&gt;&lt;code&gt;myservice&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Project name&lt;/code&gt;&lt;/code&gt; field:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer5.png" alt="application explorer5" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button: a new project will be added to your workspace. Once the dependencies resolution has been completed, weâ€™re ready to start playing with the cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="create-the-component"&gt;&lt;a class="anchor" href="#create-the-component"&gt;&lt;/a&gt;Create the component&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now that we have the source code, we can create the component. From the OpenShift Application Explorer view, right select the project (myproject), and the click the &lt;code&gt;&lt;code&gt;New â†’ Component&lt;/code&gt;&lt;/code&gt; menu:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer6.png" alt="application explorer6" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;myservice&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/code&gt; field, click the &lt;code&gt;&lt;code&gt;Browse&lt;/code&gt;&lt;/code&gt; button to select the project we have just created, select &lt;code&gt;&lt;code&gt;java&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Component type&lt;/code&gt;&lt;/code&gt; field, select &lt;code&gt;&lt;code&gt;8&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Component version&lt;/code&gt;&lt;/code&gt; field, enter &lt;code&gt;&lt;code&gt;myapp&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/code&gt; field and uncheck the &lt;code&gt;&lt;code&gt;Push after create&lt;/code&gt;&lt;/code&gt; check-box:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer7.png" alt="application explorer7" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. The component will be created and expanding the project node will now show the application that contains our component:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer8.png" alt="application explorer8" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Expanding the application will now display our component:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer9.png" alt="application explorer9" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The component has been created but it is not yet deployed on the cluster (as we unchecked the &lt;code&gt;&lt;code&gt;Push after create&lt;/code&gt;&lt;/code&gt; check-box. In order to deploy it,right select the component and click the &lt;code&gt;&lt;code&gt;Push&lt;/code&gt;&lt;/code&gt; menu. The deployment will be created and then a build will be launched. A new window will be created in the &lt;code&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/code&gt; view. After a while, you should see the following output:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer10.png" alt="application explorer10" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The component is now deployed to the cluster but we cannot access it as we need to define an URL to access it externally. Right select the component and click the &lt;code&gt;&lt;code&gt;New â†’ URL&lt;/code&gt;&lt;/code&gt; menu:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer11.png" alt="application explorer11" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;url1&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/code&gt; field and select &lt;code&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/code&gt; field:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer12.png" alt="application explorer12" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click on the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. The URL is created but not on the cluster, so we need to push again the component so that the local configuration is synchronized with the configuration on the cluster. The &lt;code&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/code&gt; window will display a message claiming that a push is now required:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer13.png" alt="application explorer13" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So push the component again (&lt;code&gt;&lt;code&gt;component â†’ Push&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Letâ€™s check that we can now access the service. Expand the component level so that we can see the URL we have just created:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer14.png" alt="application explorer14" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Right select the URL and click the &lt;code&gt;&lt;code&gt;Open in Browser&lt;/code&gt;&lt;/code&gt; menu, you should see the new browser window:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer15.png" alt="application explorer15" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can test the service: enter &lt;code&gt;&lt;code&gt;demo&lt;/code&gt;&lt;/code&gt; in the text box and click the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer16.png" alt="application explorer16" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="feedback-loop"&gt;&lt;a class="anchor" href="#feedback-loop"&gt;&lt;/a&gt;Feedback loop&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will now see how we can get fast feedback on code changes. So letâ€™s modify the application code and see how we can synchronize the changes to the cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;code&gt;&lt;code&gt;Project Explorer&lt;/code&gt;&lt;/code&gt; view, locate the &lt;code&gt;&lt;code&gt;HttpApplication.java&lt;/code&gt;&lt;/code&gt; file:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer17.png" alt="application explorer17" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Double click on the file to open the editor:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer18.png" alt="application explorer18" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On line 14, change the line:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt; protected static final String template = &amp;quot;Hello, %s!&amp;quot;;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;to&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt; protected static final String template = &amp;quot;Hello, %s!, we modified the code&amp;quot;;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;and press the &lt;code&gt;&lt;code&gt;Ctrl+S&lt;/code&gt;&lt;/code&gt; key in order to save the file.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the OpenShift Application Explorer, right click the component (myservice) and click the &lt;code&gt;&lt;code&gt;Push&lt;/code&gt;&lt;/code&gt; menu to send the changes to the cluster: the component will be built again on the cluster with the next changes and after a few seconds, it will be available again:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer19.png" alt="application explorer19" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the browser window again, enter &lt;code&gt;&lt;code&gt;demo1&lt;/code&gt;&lt;/code&gt; in the textbox (we need to change the value we used before in order to make sure cache is not involved) and click the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button again:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer20.png" alt="application explorer20" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Weâ€™ve seen that, through a sequence of code modification(s) followed by a synchronize action (push) to the cluster, we can get a very fast feedback. If you donâ€™t want to manually synchronize the the cluster (push), you can opt to automatically synchronize to the cluster with the &lt;code&gt;&lt;code&gt;Watch&lt;/code&gt;&lt;/code&gt; action: each time a code modification is done locally on your workstation, a new build will be automatically launched on the cluster.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="going-further-debug-your-application-on-the-cluster"&gt;&lt;a class="anchor" href="#going-further-debug-your-application-on-the-cluster"&gt;&lt;/a&gt;Going further: debug your application on the cluster&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Testing an application through code changes is a great achievement so far but it may be difficult for complex applications where we need to understand how the code behaves without the need to use the UI. Thatâ€™s why the next step is to be able to debug our application live on the cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new OpenShift Application Explorer allow such a scenario. We will first set up a breakpoint in our application code. Select again the &lt;code&gt;&lt;code&gt;HttpApplication.java&lt;/code&gt;&lt;/code&gt; file and scroll down to the &lt;code&gt;&lt;code&gt;greeting&lt;/code&gt;&lt;/code&gt; method:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer21.png" alt="application explorer21" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On line 41, double click in the left ruler column so that a breakpoint is set:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer22.png" alt="application explorer22" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are now ready to debug our application. In order to do that, we need to launch a local (Java in our case) debugger that will be connected to our application on the cluster. This is what the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; action is doing: right select the component (myservice) and click the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; menu: you will see that port forwarding has been started so that our local (Java) debugger can connect to the remote Java virtual machine:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer23.png" alt="application explorer23" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;and then a local (Java) debugger is launched and connected to that port. Letâ€™s check now that we can debug our application:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the browser window again, enter &lt;code&gt;&lt;code&gt;demo2&lt;/code&gt;&lt;/code&gt; in the textbox (we need to change the value we used before in order to make sure cache is not involved) and click the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button again: as our breakpoint is hit, you will be asked if you want to switch to the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; perspective (this may not be displayed if you previously selected the &lt;code&gt;&lt;code&gt;Remember my decision&lt;/code&gt;&lt;/code&gt; checkbox:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer24.png" alt="application explorer24" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/code&gt; button and you will see the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; perspective:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer25.png" alt="application explorer25" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You are now debugging a Java component running on a remote cluster just like it was running locally on your workstation. Please note that we demoed this feature using a Java based component but we also support the same feature to NodeJS based components.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus"&gt;&lt;a class="anchor" href="#quarkus"&gt;&lt;/a&gt;Quarkus&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Starting with this release, weâ€™ve added a new Quarkus tooling for applications built on top of the Supersonic Subatomic Java &lt;a href="https://quarkus.io"&gt;Quarkus&lt;/a&gt; framework.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="quarkus-project-creation-wizard"&gt;&lt;a class="anchor" href="#quarkus-project-creation-wizard"&gt;&lt;/a&gt;Quarkus project creation wizard&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new wizard has been added to create a new Quarkus application project in your workspace. In order to launch it, first enter Ctrl+N to get the list of available wizards&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus1.png" alt="quarkus1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the filter text box, enter the &lt;code&gt;&lt;code&gt;qu&lt;/code&gt;&lt;/code&gt; characters to filter the list of wizards:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus2.png" alt="quarkus2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the &lt;strong&gt;Quarkus Project&lt;/strong&gt; wizard and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus3.png" alt="quarkus3" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Project type&lt;/strong&gt; combo allows you to choose between Maven or Gradle tool used to manage your project. Weâ€™ll go with Maven for this tutorial.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter a project name (we will use code-with-quarkus) and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus4.png" alt="quarkus4" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This dialog allows you to choose various parameters for you project, like the project coordinates (group id, artifact id and version) along with the base REST endpoint information. Weâ€™ll use the default so click on the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus5.png" alt="quarkus5" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This dialog allows to select which Quarkus extensions you want to add to your project. The extensions are grouped by categories, so first select a specific category in the left table. We will choose the &lt;strong&gt;Web&lt;/strong&gt; one:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus6-1.png" alt="quarkus6 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should have noticed that the middle table has been updated. In order to add an extension, double click on the extension in the middle table. We will add &lt;strong&gt;RESTEasy JAX-RS&lt;/strong&gt; and &lt;strong&gt;RESTEasy Qute&lt;/strong&gt; (a templating engine):&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus7-1.png" alt="quarkus7 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should have noticed that the extensions that you double clicked on are now being added to the right table. If you want to remove an extension from the list of selected ones, double click again either in the center table or in the right table.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are now all set so click on the &lt;strong&gt;Finish&lt;/strong&gt; button to launch the project creation. The project creation job is then launched, dependencies are being retrieved and after a while, the new project will appear in the &lt;strong&gt;Project Explorer&lt;/strong&gt; window:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus8.png" alt="quarkus8" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We have successfully created our first Quarkus project. Letâ€™s see now how we can launch this application and debug it.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="running-the-quarkus-application"&gt;&lt;a class="anchor" href="#running-the-quarkus-application"&gt;&lt;/a&gt;Running the Quarkus application&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Running a Quarkus application can be done from the workbench Run configurations. Select the &lt;strong&gt;Run â†’ Run Configurationsâ€¦â€‹&lt;/strong&gt; menu to display the dialog allowing to create a Run configuration.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus9.png" alt="quarkus9" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Scroll down until the &lt;strong&gt;Quarkus Application&lt;/strong&gt; is visible and select it:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus10-1.png" alt="quarkus10 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;strong&gt;New configuration&lt;/strong&gt; button (top left):&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus11-1.png" alt="quarkus11 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A workspace project needs to be associated with the configuration so click on the &lt;strong&gt;Browse&lt;/strong&gt; button to see the project selection dialog:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus12-1.png" alt="quarkus12 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As the workspace contains a single project, it is automatically selected and we can click on the &lt;strong&gt;OK&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus13-1.png" alt="quarkus13 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The configuration is now ready to be used. So letâ€™s start our Quarkus application by clicking on the &lt;strong&gt;Run&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should see a new Console being displayed.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus14.png" alt="quarkus14" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The application is being built and after a while, it will be started:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus15.png" alt="quarkus15" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debugging-the-quarkus-application"&gt;&lt;a class="anchor" href="#debugging-the-quarkus-application"&gt;&lt;/a&gt;Debugging the Quarkus application&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Debugging a Quarkus application is just a simple as launching the previous configuration weâ€™ve just created in Debug. You just need to open the &lt;strong&gt;Run â†’ Debug Configurationsâ€¦â€‹&lt;/strong&gt;. menu and click on the &lt;strong&gt;Debug&lt;/strong&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It will start the Quarkus application like in the previous paragraph but also connect a remote JVM debug configuration to your running Quarkus application. So if you have set breakpoints in your application source files, the execution will automatically stops there.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="application-properties-content-assist"&gt;&lt;a class="anchor" href="#application-properties-content-assist"&gt;&lt;/a&gt;application.properties content assist&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Every Quarkus application is configured through a configuration called &lt;strong&gt;application.properties&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The content of this configuration file is dependent of the set of Quarkus extensions that your application is using. Some settings are mandatory, some others are not and the possible values are specific to the nature of the setting: boolean, integer, limited set of values (enumerations).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So, as a developer, you need to look at various guides and documentations (the core Quarkus and the extension specific ones)&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So Quarkus Tools provides content assist on those specific files that:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;validates the content of the application.properties files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;provides you with the possible setting names and values&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Letâ€™s see it in action.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Go to &lt;strong&gt;src/main/resources/application.properties&lt;/strong&gt; in the project and right click and select &lt;strong&gt;Open With â†’ Generic Text Editor&lt;/strong&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus16.png" alt="quarkus16" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Go the third line of the file and invoke code completion (Ctrl + Space):&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus17.png" alt="quarkus17" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For each setting, a documentation is displayed when you mouse over the setting. Let try to add &lt;strong&gt;quarkus.http.port&lt;/strong&gt; to the file and mouse over this name:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus18.png" alt="quarkus18" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If we enter a wrong value (false instead of a numeric value), then the error will be highlighted:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus19.png" alt="quarkus19" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is the first set of features that will be integration into the next version of JBoss Tools. We encourage you to used it and if you are missing features and/or enhancements, donâ€™t hesitate to report them here: &lt;a href="https://issues.redhat.com/issues/?jql=project%20%3D%20JBIDE%20AND%20component%20%3D%20quarkus%20and%20status%20!%3D%20Closed%20and%20status%20!%3D%20Resolved%20"&gt;JBoss Tools issue tracker&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="hibernate-runtime-provider-updates"&gt;&lt;a class="anchor" href="#hibernate-runtime-provider-updates"&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.12.Final and Hibernate Tools version 5.4.12.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.15.Final and Hibernate Tools version 5.3.15.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="deprecation"&gt;&lt;a class="anchor" href="#deprecation"&gt;&lt;/a&gt;Deprecation&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Forge, Java Server Tools (JST) and Visual Page Editor (VPE) have been deprecated. Even though they received an update with this release, we have no plan to maintain or add new features and they may be removed in the future.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In addition, the adapters for Red Hat JBoss Enterprise Application Server 4.3 and 5.0 have also been deprecated.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="platform"&gt;&lt;a class="anchor" href="#platform"&gt;&lt;/a&gt;Platform&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;&lt;a class="anchor" href="#views-dialogs-and-toolbar"&gt;&lt;/a&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="new-view-menu-icon"&gt;&lt;a class="anchor" href="#new-view-menu-icon"&gt;&lt;/a&gt;New view menu icon&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The view menu chevron icon (â–½) is replaced by a modern equivalent, the vertical ellipsis ( â ‡).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Almost every view has a menu that may contain additional configuration settings like filters, layout settings, and so on. The view menu was often overlooked and we expect that this change will help users to find it.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/view_menu.png" alt="view menu" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="find-actions-the-improved-quick-access"&gt;&lt;a class="anchor" href="#find-actions-the-improved-quick-access"&gt;&lt;/a&gt;Find Actions: The improved Quick Access&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The formerly called &lt;strong&gt;Quick Access&lt;/strong&gt; action has been retitled to &lt;strong&gt;Find Actions&lt;/strong&gt; to better emphasize its goal.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The related UI has changed a bit to improve its usage and accessibility:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The widget item is now a regular toolbar item (button-like)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An icon is shown&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Right-clicking on the tool item works and shows typical actions, including &lt;strong&gt;Hide&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The proposals are now a regular dialog, centered on the workbench&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;These changes will greatly improve the experience if youâ€™re using a screen reader as it relies on a more standardized focus state. This also leverages all the default and usual accessibility features of dialogs (moveable, resizableâ€¦â€‹).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Loading the proposals has been improved as well to avoid UI freezes when loading proposals.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="find-actions-finds-text-in-file-contents"&gt;&lt;a class="anchor" href="#find-actions-finds-text-in-file-contents"&gt;&lt;/a&gt;Find Actions finds text in file contents&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Find Actions&lt;/strong&gt; is now extended by the &lt;strong&gt;Quick Text Search&lt;/strong&gt; feature to show the potential text matches in file contents also in the proposals.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/file-content-find-action.png" alt="file content find action" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If the Quick Text Search bundle wasnâ€™t started yet, you may miss those matches. In this case, you can use &lt;strong&gt;Find Actions&lt;/strong&gt; itself to activate the Quick Text Search by finding and selecting the &lt;strong&gt;Activate bundle for &amp;apos;File content&amp;apos;&lt;/strong&gt; proposals entry.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/activate-file-content.png" alt="activate file content" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="find-actions-lists-workspace-files"&gt;&lt;a class="anchor" href="#find-actions-lists-workspace-files"&gt;&lt;/a&gt;Find Actions lists workspace files&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Find Actions&lt;/strong&gt; can now list matching file names from the workspace (similar to the &lt;strong&gt;Open Resource&lt;/strong&gt; dialog). Upon selection the file is opened in the editor.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/find-actions-resources.png" alt="find actions resources" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="inline-rename-for-simple-resources-while-in-project-explorer"&gt;&lt;a class="anchor" href="#inline-rename-for-simple-resources-while-in-project-explorer"&gt;&lt;/a&gt;Inline rename for simple resources while in Project Explorer.&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;strong&gt;Project Explorer&lt;/strong&gt;, renaming (with the &lt;code&gt;&lt;code&gt;F2&lt;/code&gt;&lt;/code&gt; shortcut or Rename context menu) will start an inline rename for normal resources when other files arenâ€™t affected by the rename.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/project-explorer-inline-renaming.png" alt="project explorer inline renaming" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In cases where other files are affected by the rename, or the rename operation is customized, the rename dialog will appear as it previously did.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="text-editors"&gt;&lt;a class="anchor" href="#text-editors"&gt;&lt;/a&gt;Text Editors&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-problem-markers-inline"&gt;&lt;a class="anchor" href="#show-problem-markers-inline"&gt;&lt;/a&gt;Show problem markers inline&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now see the &lt;strong&gt;errors, warnings, and info markers&lt;/strong&gt; inline in most of the text editors. No more mousing around to see the actual error message!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/annotation-code-mining-jdt.png" alt="annotation code mining jdt" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can see the available quick fixes by clicking on the message.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/annotation-code-mining-quickfix.png" alt="annotation code mining quickfix" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can enable it on the &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/strong&gt; preference page and set &lt;strong&gt;Show Code Minings for Annotations&lt;/strong&gt; to:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;None (default)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors only&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors and Warnings&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors, Warnings and Info&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="backspace-delete-can-treat-spaces-as-tabs"&gt;&lt;a class="anchor" href="#backspace-delete-can-treat-spaces-as-tabs"&gt;&lt;/a&gt;Backspace/delete can treat spaces as tabs&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you use the &lt;strong&gt;Insert spaces for tabs&lt;/strong&gt; option, now you can also change the backspace and delete keys behavior to remove multiple spaces at once, as if they were a tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new setting is called &lt;strong&gt;Remove multiple spaces on backspace/delete&lt;/strong&gt; and is found on the &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/strong&gt; preference page.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/delete-spaces-as-tabs.png" alt="delete spaces as tabs" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug"&gt;&lt;a class="anchor" href="#debug"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="collapse-all-button-in-the-debug-view"&gt;&lt;a class="anchor" href="#collapse-all-button-in-the-debug-view"&gt;&lt;/a&gt;Collapse All Button in the Debug View&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;strong&gt;Debug&lt;/strong&gt; View, now you can now use the new &lt;strong&gt;Collapse All&lt;/strong&gt; button to collapse all the launches.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Before collapsing:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/collapse-all-debug-view-before.png" alt="collapse all debug view before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;After collapsing:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/collapse-all-debug-view-after.png" alt="collapse all debug view after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="control-character-interpretation-in-console-view"&gt;&lt;a class="anchor" href="#control-character-interpretation-in-console-view"&gt;&lt;/a&gt;Control character interpretation in Console View&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Console&lt;/strong&gt; View can now interpret the control characters backslash (&lt;code&gt;&lt;code&gt;\b&lt;/code&gt;&lt;/code&gt;) and carriage return (&lt;code&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This feature is disabled by default. You can enable it on the &lt;strong&gt;Run/Debug &amp;gt; Console&lt;/strong&gt; preference page.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/animated-progress-in-console.gif" alt="animated progress in console" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="themes-and-styling"&gt;&lt;a class="anchor" href="#themes-and-styling"&gt;&lt;/a&gt;Themes and Styling&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="improvements-in-ui-forms-styling"&gt;&lt;a class="anchor" href="#improvements-in-ui-forms-styling"&gt;&lt;/a&gt;Improvements in UI Forms Styling&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;CSS customization of &lt;code&gt;&lt;code&gt;ExpandableComposite&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Section&lt;/code&gt;&lt;/code&gt; was reworked to give you more control over their styling. In dark mode, those elements now integrate better with other Form elements.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Old:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/pom_dark_old.png" alt="pom dark old" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/pom_dark_new.png" alt="pom dark new" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="perspective-switcher-gets-aligned-with-normal-toolbar-styling"&gt;&lt;a class="anchor" href="#perspective-switcher-gets-aligned-with-normal-toolbar-styling"&gt;&lt;/a&gt;Perspective switcher gets aligned with normal toolbar styling&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The special styling of the &lt;strong&gt;Perspective switcher&lt;/strong&gt; has been removed to make the Toolbar look consistent. This also reduces OS specific styling issues with the perspective switcher.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Old:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/old-perspective-switcher.png" alt="old perspective switcher" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/new-perspective-switcher.png" alt="new perspective switcher" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="usage-of-consistent-colors-for-the-dark-theme"&gt;&lt;a class="anchor" href="#usage-of-consistent-colors-for-the-dark-theme"&gt;&lt;/a&gt;Usage of consistent colors for the dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The usage of different shades of gray in the dark theme was reduced.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The styling of the widgets is also not based on the selected view anymore, which makes the UI more consistent.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="general-updates"&gt;&lt;a class="anchor" href="#general-updates"&gt;&lt;/a&gt;General Updates&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="ant-1-10-7"&gt;&lt;a class="anchor" href="#ant-1-10-7"&gt;&lt;/a&gt;Ant 1.10.7&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.7.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="support-for-the-ant-include-task-added"&gt;&lt;a class="anchor" href="#support-for-the-ant-include-task-added"&gt;&lt;/a&gt;Support for the Ant include task added&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Ant &lt;code&gt;&lt;code&gt;include&lt;/code&gt;&lt;/code&gt; task (available in the Ant library since 1.8.0) is now fully recognized by the ant-ui-plugin and validated accordingly.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt"&gt;&lt;a class="anchor" href="#java-developement-tools-jdt"&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-13-support"&gt;&lt;a class="anchor" href="#java-13-support"&gt;&lt;/a&gt;Java 13 Support&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-13"&gt;&lt;a class="anchor" href="#java-13"&gt;&lt;/a&gt;Java 13&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Javaâ„¢ 13 is available and Eclipse JDT supports Java 13 for the Eclipse 4.14 release.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The release notably includes the following Java 13 features:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;JEP 354: Switch Expressions (Preview).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 355: Text Blocks (Preview).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please note that these are preview language feature and hence enable preview option should be on. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java13/Examples"&gt;Java 13 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="keyboard-shortcut-for-text-block-creation"&gt;&lt;a class="anchor" href="#keyboard-shortcut-for-text-block-creation"&gt;&lt;/a&gt;Keyboard shortcut for Text Block creation&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A keyboard shortcut &lt;strong&gt;Ctrl + Shift + &amp;apos;&lt;/strong&gt; is added in the Java Editor for &lt;strong&gt;text blocks&lt;/strong&gt;, which is a preview feature added in Java 13.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Conditions under which this keyboard shortcut works are:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The Java Project should have a compliance of 13 or above and the preview features should be enabled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The selection in the editor should not be part of a string or a comment or a text block.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Examples:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-pre-creation1.png" alt="textblock pre creation1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Pressing the shortcut gives:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-post-creation1.png" alt="textblock post creation1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can also encompass a selected text in text block as below:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-pre-creation2.png" alt="textblock pre creation2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On pressing the shortcut, you get this:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-post-creation2.png" alt="textblock post creation2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-editor"&gt;&lt;a class="anchor" href="#java-editor"&gt;&lt;/a&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="remove-unnecessary-array-creation"&gt;&lt;a class="anchor" href="#remove-unnecessary-array-creation"&gt;&lt;/a&gt;Remove unnecessary array creation&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new cleanup action &lt;strong&gt;Remove unnecessary array creation&lt;/strong&gt; has been added. It will remove explicit array creation for &lt;code&gt;&lt;code&gt;varargs&lt;/code&gt;&lt;/code&gt; parameters.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-option.png" alt="unnecessary array creation option" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-before.png" alt="unnecessary array creation before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;After cleanup, you get this:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-after.png" alt="unnecessary array creation after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="push-negation-down-in-expression"&gt;&lt;a class="anchor" href="#push-negation-down-in-expression"&gt;&lt;/a&gt;Push negation down in expression&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new Java cleanup/save action &lt;strong&gt;Push down negation&lt;/strong&gt; has been added. It reduces the double negation by reverting the arithmetic expressions.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For instance:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;!!isValid;&lt;/code&gt; becomes &lt;code&gt;isValid;&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;!(a != b);&lt;/code&gt; becomes &lt;code&gt;(a == b);&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/push-down-negation.png" alt="push down negation" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="provide-templates-for-empty-java-source-files"&gt;&lt;a class="anchor" href="#provide-templates-for-empty-java-source-files"&gt;&lt;/a&gt;Provide templates for empty Java source files&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When dealing with empty Java source files, some basic templates (class, interface, enum) will now be available from the content assist popup.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/templates-empty-java-file.png" alt="templates empty java file" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="postfix-completion-proposal-category"&gt;&lt;a class="anchor" href="#postfix-completion-proposal-category"&gt;&lt;/a&gt;Postfix completion proposal category&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Postfix completion allows certain kinds of language constructs to be applied to the previously entered text.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example: Entering &lt;code&gt;&lt;code&gt;&amp;quot;input text&amp;quot;.var&lt;/code&gt;&lt;/code&gt; and selecting the &lt;strong&gt;var - Creates a new variable&lt;/strong&gt; proposal, will result in &lt;code&gt;&lt;code&gt;String name = &amp;quot;input text&amp;quot;&lt;/code&gt;&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/postfix-completion.png" alt="postfix completion" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="try-with-resources-quickfix"&gt;&lt;a class="anchor" href="#try-with-resources-quickfix"&gt;&lt;/a&gt;try-with-resources quickfix&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quickfix has been added to create a &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; statement based on the selected lines. Lines that are selected must start with declarations of objects that implement &lt;code&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/code&gt;. These declarations are added as the resources of the &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; statement.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If there are selected statements that are not eligible resources (such as Objects that donâ€™t implement &lt;code&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/code&gt;), then the first such statement and all the following selected statements will be placed in the &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; body.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Method before applying try-with-resources:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource1.png" alt="tryWithResource1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select all the lines inside the method, then use the short-cut &lt;strong&gt;Ctrl+1&lt;/strong&gt; and click on &lt;strong&gt;Surround with try-with-resources&lt;/strong&gt; from the list:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource2.png" alt="tryWithResource2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This results in:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource3.png" alt="tryWithResource3" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="javadoc-tag-checking-for-modules"&gt;&lt;a class="anchor" href="#javadoc-tag-checking-for-modules"&gt;&lt;/a&gt;Javadoc tag checking for modules&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Support has been added to check the Javadoc of a module-info.java file to report missing and duplicate &lt;code&gt;&lt;code&gt;@uses&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;@provides&lt;/code&gt;&lt;/code&gt; tags depending on the compiler settings (&lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler &amp;gt; Javadoc&lt;/strong&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/checkModuleJavadoc.png" alt="checkModuleJavadoc" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-formatter"&gt;&lt;a class="anchor" href="#java-formatter"&gt;&lt;/a&gt;Java Formatter&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="formatting-of-text-blocks"&gt;&lt;a class="anchor" href="#formatting-of-text-blocks"&gt;&lt;/a&gt;Formatting of text blocks&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The code formatter can now handle &lt;strong&gt;text blocks&lt;/strong&gt;, which is a preview feature added in Java 13. Itâ€™s controlled by the &lt;strong&gt;Text block indentation&lt;/strong&gt; setting, found right in the &lt;strong&gt;Indentation&lt;/strong&gt; section of the &lt;strong&gt;Profile Editor (Preferences &amp;gt; Java &amp;gt; Code Style &amp;gt; Formatter &amp;gt; Editâ€¦â€‹&lt;/strong&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default, text block lines are indented the same way as wrapped code lines, that is with two extra tabs relative to the starting indentation (or whatever is set as &lt;strong&gt;Default indentation for wrapped lines&lt;/strong&gt; in the &lt;strong&gt;Line Wrapping&lt;/strong&gt; section). You can also set it to use only one tab for indentation (&lt;strong&gt;Indent by one&lt;/strong&gt;), align all lines to the position of the opening quotes (&lt;strong&gt;Indent on column&lt;/strong&gt;), or preserve the original formatting (&lt;strong&gt;Do not touch&lt;/strong&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/formatter-text-block.png" alt="formatter text block" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="blank-lines-between-javadoc-tags"&gt;&lt;a class="anchor" href="#blank-lines-between-javadoc-tags"&gt;&lt;/a&gt;Blank lines between Javadoc tags&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The code formatter can now divide Javadoc tags into groups (by type, for example &lt;code&gt;&lt;code&gt;@param&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;@throws&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;@returns&lt;/code&gt;&lt;/code&gt;) and separate these groups with blank lines. This feature can be turned on in the &lt;strong&gt;Comments &amp;gt; Javadocs&lt;/strong&gt; section by checking the &lt;strong&gt;Blank lines between tags of different type&lt;/strong&gt; box.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="space-after-not-operator"&gt;&lt;a class="anchor" href="#space-after-not-operator"&gt;&lt;/a&gt;Space after not operator&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new setting has been added to control whether a space should be added &lt;strong&gt;after not (&lt;code&gt;&lt;code&gt;!&lt;/code&gt;&lt;/code&gt;) operator&lt;/strong&gt;, independently from other unary operators. To find it, expand sections &lt;strong&gt;Whitespace &amp;gt; Expressions &amp;gt; Unary&lt;/strong&gt; operators and go to the last checkbox.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/formatter-space-after-not.png" alt="formatter space after not" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="junit"&gt;&lt;a class="anchor" href="#junit"&gt;&lt;/a&gt;JUnit&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="bree-update-for-org-eclipse-jdt-junit-runtime"&gt;&lt;a class="anchor" href="#bree-update-for-org-eclipse-jdt-junit-runtime"&gt;&lt;/a&gt;BREE update for org.eclipse.jdt.junit.runtime&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Bundle Required Execution Environment (BREE) for the &lt;code&gt;&lt;code&gt;org.eclipse.jdt.junit.runtime&lt;/code&gt;&lt;/code&gt; bundle is now J2SE-1.5.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug-2"&gt;&lt;a class="anchor" href="#debug-2"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="no-suspending-on-exception-recurrence"&gt;&lt;a class="anchor" href="#no-suspending-on-exception-recurrence"&gt;&lt;/a&gt;No suspending on exception recurrence&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new workspace preference has been added for exception breakpoints: &lt;strong&gt;Suspend policy for recurring exception instances&lt;/strong&gt; controls whether the same exception instance may cause the debugger to suspend more than once.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/preference-exception-recurrence.png" alt="preference exception recurrence" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This option is relevant when debugging an application that has &lt;code&gt;&lt;code&gt;try&lt;/code&gt;&lt;/code&gt; blocks at several levels of the architecture. In this situation an exception breakpoint may fire multiple times for the same actual exception instance: A &lt;code&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/code&gt; statement inside a &lt;code&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/code&gt; block may re-throw the same exception. The same holds for each &lt;code&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/code&gt; block or &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; block.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the debugger stops due to an exception breakpoint, you may want to continue your debug session by pressing &lt;strong&gt;Resume (F8)&lt;/strong&gt;, but all that catching and re-throwing will force you to observe all locations where the same exception will surface again and again. Suspending at all &lt;code&gt;&lt;code&gt;try&lt;/code&gt;&lt;/code&gt; blocks on the call stack may also spoil your context of open Java editors, by opening more editors of classes that are likely irrelevant for the debugging task at hand.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;JDT Debugger&lt;/strong&gt; will now detect this situation, and the first time it notices the same exception instance recurring at the surface, a new question dialog is shown:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/dialog-exception-recurrence.png" alt="dialog exception recurrence" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you select &lt;strong&gt;Skip&lt;/strong&gt; in this dialog, the current exception instance will be dismissed for good. Still, new instances of the same exception type will cause suspending when they are thrown.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you check &lt;strong&gt;Remember my decision&lt;/strong&gt; your choice will be stored in the mentioned workspace preference to be effective for all exception breakpoints.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Even after choosing &lt;strong&gt;Skip&lt;/strong&gt; â€” resp. &lt;strong&gt;Only once&lt;/strong&gt; in the preferences â€” you can have the old behavior simply by pressing &lt;strong&gt;Step Return (F7)&lt;/strong&gt; instead of &lt;strong&gt;Resume&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="jdt-developers"&gt;&lt;a class="anchor" href="#jdt-developers"&gt;&lt;/a&gt;JDT Developers&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="flag-whether-content-assist-extension-needs-to-run-in-ui-thread"&gt;&lt;a class="anchor" href="#flag-whether-content-assist-extension-needs-to-run-in-ui-thread"&gt;&lt;/a&gt;Flag whether content assist extension needs to run in UI thread&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The existing &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalComputer&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javadocCompletionProposalComputer&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalSorters&lt;/code&gt;&lt;/code&gt; extension points now allow a new attribute &lt;strong&gt;requiresUIThread&lt;/strong&gt; that allows a developer to declare whether running in the UI thread is required or not.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This information will be used by the &lt;strong&gt;Content Assist&lt;/strong&gt; operation to allow some optimizations and prevent UI freezes by reducing the amount of work happening in the UI thread.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To preserve backward compatibility, the default value for this attribute (if unset) is &lt;code&gt;&lt;code&gt;true&lt;/code&gt;&lt;/code&gt;, meaning the extension is expected to run in the UI thread.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more"&gt;&lt;a class="anchor" href="#and-more"&gt;&lt;/a&gt;And moreâ€¦â€‹&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.14.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next"&gt;&lt;a class="anchor" href="#what-is-next"&gt;&lt;/a&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Having JBoss Tools 4.14.0 and Red Hat CodeReady Studio 12.14 out we are already working on the next release for Eclipse 2020-03.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7YmPI72ipYY" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.14.0 and Red Hat CodeReady Studio 12.14 for Eclipse 2019-12 are here waiting for you. Check it out! Installation Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady product page and run it like this: java -jar codereadystudio-&lt;installername&gt;.jar JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more: This release requires at least Eclipse 4.14 (2019-12) but we recommend using the latest Eclipse 4.14 2019-12 JEE Bundle since then you get most of the dependencies preinstalled. Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under "JBoss Tools" or "Red Hat CodeReady...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2020-03-17T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/12.14.0.ga.html</feedburner:origLink></entry></feed>
